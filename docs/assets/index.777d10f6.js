var e=Object.defineProperty,t=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable,s=(t,o,i)=>o in t?e(t,o,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[o]=i,a=(e,t)=>{for(var o in t||(t={}))r.call(t,o)&&s(e,o,t[o]);if(i)for(var o of i(t))n.call(t,o)&&s(e,o,t[o]);return e},l=(e,i)=>t(e,o(i)),h=("undefined"!=typeof require&&require,(e,t,o)=>(s(e,"symbol"!=typeof t?t+"":t,o),o));import{d as p,c as f,a as c,F as m,r as g,n as u,o as d,t as b,p as S,i as q,b as y,e as _,f as A,g as P,h as L,j as D,k as I,w as R,S as O,l as T,m as N,q as x}from"./vendor.66dd1abc.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerpolicy&&(t.referrerPolicy=e.referrerpolicy),"use-credentials"===e.crossorigin?t.credentials="include":"anonymous"===e.crossorigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();const E={},w=function(e,t){return t&&0!==t.length?Promise.all(t.map((e=>{if((e=`/tracejs/${e}`)in E)return;E[e]=!0;const t=e.endsWith(".css"),o=t?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${e}"]${o}`))return;const i=document.createElement("link");return i.rel=t?"stylesheet":"modulepreload",t||(i.as="script",i.crossOrigin=""),i.href=e,document.head.appendChild(i),t?new Promise(((e,t)=>{i.addEventListener("load",e),i.addEventListener("error",t)})):void 0}))).then((()=>e())):e()};var M=p({name:"NavigationTabs",props:{labels:{type:Array,required:!0},activeIndex:{type:Number,default:0},isBoxed:{type:Boolean,default:!1}},emits:["update:activeIndex"],setup:(e,{emit:t})=>({setActiveIndex:e=>t("update:activeIndex",e)})});const C={style:{padding:"0.25rem 0 0 0.5rem"}},F=["onClick"];var v,k;M.render=function(e,t,o,i,r,n){return d(),f("div",{class:u({tabs:!0,"is-boxed":e.isBoxed})},[c("ul",C,[(d(!0),f(m,null,g(e.labels,((t,o)=>(d(),f("li",{key:o,class:u({"is-active":e.activeIndex===o})},[c("a",{onClick:t=>e.setActiveIndex(o)},b(t),9,F)],2)))),128))])],2)},(k=v||(v={}))[k.NORMAL=1]="NORMAL",k[k.AMBIG=2]="AMBIG",k[k.ALLOPHONE=3]="ALLOPHONE",k[k.OTHER=4]="OTHER";const W=()=>({label:"",features:Array(63).fill(0),durationScalar:Array(7).fill(1),phonologicalRole:v.NORMAL}),V=()=>({modelInput:"-^br^pt-",spread:[6,6,6,6,6,6,6],spreadScale:[1,1,1,1,1,1,1],min:-.3,max:1,nreps:1,slicesPerPhon:3,fSlices:99,decay:{F:.01,P:.03,W:.05},rest:{F:-.1,P:-.1,W:-.01},alpha:{IF:1,FP:.02,PW:.05,WP:.03,PF:0},gamma:{F:.04,P:.04,W:.03},deltaInput:6,noiseSD:0,stochasticitySD:0,atten:1,bias:0,learningrate:0,lengthNormalization:0,phonology:[{label:"p",features:[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,.2,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:v.NORMAL},{label:"b",features:[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,.2,1,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:v.NORMAL},{label:"t",features:[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,.2,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:v.NORMAL},{label:"d",features:[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,.2,1,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:v.NORMAL},{label:"k",features:[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,.1,.3,1,.3,.1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,.2,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:v.NORMAL},{label:"g",features:[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,.1,.3,1,.3,.1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,.2,1,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:v.NORMAL},{label:"s",features:[0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,.3,.1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:v.NORMAL},{label:"S",features:[0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,.1,.3,1,.3,.1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:v.NORMAL},{label:"r",features:[0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,.5,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:v.NORMAL},{label:"l",features:[0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,.5,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:v.NORMAL},{label:"a",features:[1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,.1,.3,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:v.NORMAL},{label:"i",features:[1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,.3,.1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:v.NORMAL},{label:"u",features:[1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,.1,.3,1,.3,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:v.NORMAL},{label:"^",features:[0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,.1,.3,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:v.NORMAL},{label:"-",features:[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:v.NORMAL}],lexicon:[{phon:"^",freq:23248,prime:0},{phon:"^br^pt",freq:37,prime:0},{phon:"^dapt",freq:71,prime:0},{phon:"^d^lt",freq:50,prime:0},{phon:"^gri",freq:264,prime:0},{phon:"^lat",freq:50,prime:0},{phon:"^part",freq:57,prime:0},{phon:"^pil",freq:108,prime:0},{phon:"ark",freq:50,prime:0},{phon:"ar",freq:4406,prime:0},{phon:"art",freq:274,prime:0},{phon:"art^st",freq:112,prime:0},{phon:"^slip",freq:29,prime:0},{phon:"bar",freq:125,prime:0},{phon:"bark",freq:125,prime:0},{phon:"bi",freq:6382,prime:0},{phon:"bit",freq:87,prime:0},{phon:"bist",freq:50,prime:0},{phon:"blak",freq:118,prime:0},{phon:"bl^d",freq:122,prime:0},{phon:"blu",freq:143,prime:0},{phon:"bab",freq:45,prime:0},{phon:"babi",freq:23,prime:0},{phon:"badi",freq:341,prime:0},{phon:"bust",freq:23,prime:0},{phon:"but",freq:34,prime:0},{phon:"bat^l",freq:95,prime:0},{phon:"baks",freq:87,prime:0},{phon:"brid",freq:25,prime:0},{phon:"brud",freq:26,prime:0},{phon:"br^S",freq:77,prime:0},{phon:"b^b^l",freq:32,prime:0},{phon:"b^k",freq:31,prime:0},{phon:"b^s",freq:34,prime:0},{phon:"b^t",freq:4382,prime:0},{phon:"kar",freq:386,prime:0},{phon:"kard",freq:62,prime:0},{phon:"karp^t",freq:22,prime:0},{phon:"sis",freq:34,prime:0},{phon:"klak",freq:30,prime:0},{phon:"kl^b",freq:171,prime:0},{phon:"klu",freq:25,prime:0},{phon:"kalig",freq:32,prime:0},{phon:"kul",freq:149,prime:0},{phon:"kap",freq:32,prime:0},{phon:"kapi",freq:61,prime:0},{phon:"k^p^l",freq:164,prime:0},{phon:"krip",freq:23,prime:0},{phon:"kru",freq:38,prime:0},{phon:"krap",freq:44,prime:0},{phon:"kruS^l",freq:31,prime:0},{phon:"kru^l",freq:20,prime:0},{phon:"kr^S",freq:23,prime:0},{phon:"k^p",freq:63,prime:0},{phon:"k^t",freq:223,prime:0},{phon:"dark",freq:234,prime:0},{phon:"dart",freq:20,prime:0},{phon:"dil",freq:157,prime:0},{phon:"did",freq:21,prime:0},{phon:"dip",freq:199,prime:0},{phon:"du",freq:1366,prime:0},{phon:"dal",freq:23,prime:0},{phon:"dat",freq:28,prime:0},{phon:"d^b^l",freq:83,prime:0},{phon:"dru",freq:69,prime:0},{phon:"drap",freq:196,prime:0},{phon:"dr^g",freq:58,prime:0},{phon:"d^k",freq:21,prime:0},{phon:"d^l",freq:36,prime:0},{phon:"d^st",freq:78,prime:0},{phon:"duti",freq:95,prime:0},{phon:"ist",freq:183,prime:0},{phon:"it",freq:300,prime:0},{phon:"glu",freq:28,prime:0},{phon:"gad",freq:332,prime:0},{phon:"gat",freq:482,prime:0},{phon:"grik",freq:66,prime:0},{phon:"grit",freq:38,prime:0},{phon:"gru",freq:64,prime:0},{phon:"grup",freq:545,prime:0},{phon:"gard",freq:82,prime:0},{phon:"g^tar",freq:24,prime:0},{phon:"kip",freq:348,prime:0},{phon:"ki",freq:125,prime:0},{phon:"lid",freq:517,prime:0},{phon:"lig",freq:83,prime:0},{phon:"lip",freq:38,prime:0},{phon:"list",freq:343,prime:0},{phon:"lig^l",freq:77,prime:0},{phon:"labi",freq:22,prime:0},{phon:"lak",freq:109,prime:0},{phon:"lup",freq:23,prime:0},{phon:"lus",freq:68,prime:0},{phon:"lat",freq:169,prime:0},{phon:"l^k",freq:49,prime:0},{phon:"l^ki",freq:25,prime:0},{phon:"l^kS^ri",freq:24,prime:0},{phon:"ad",freq:53,prime:0},{phon:"pap^",freq:40,prime:0},{phon:"park",freq:242,prime:0},{phon:"part",freq:625,prime:0},{phon:"parS^l",freq:25,prime:0},{phon:"partli",freq:49,prime:0},{phon:"parti",freq:275,prime:0},{phon:"par",freq:10,prime:0},{phon:"pi",freq:24,prime:0},{phon:"pik",freq:24,prime:0},{phon:"pip^l",freq:887,prime:0},{phon:"pis",freq:221,prime:0},{phon:"plat",freq:57,prime:0},{phon:"pl^g",freq:28,prime:0},{phon:"pl^s",freq:72,prime:0},{phon:"pak^t",freq:64,prime:0},{phon:"p^lis",freq:159,prime:0},{phon:"pal^si",freq:290,prime:0},{phon:"pul",freq:129,prime:0},{phon:"pap",freq:31,prime:0},{phon:"pas^b^l",freq:373,prime:0},{phon:"pas^bli",freq:61,prime:0},{phon:"pat",freq:37,prime:0},{phon:"prist",freq:33,prime:0},{phon:"prab^b^l",freq:24,prime:0},{phon:"prab^bli",freq:261,prime:0},{phon:"pradus",freq:256,prime:0},{phon:"prad^kt",freq:195,prime:0},{phon:"pragr^s",freq:141,prime:0},{phon:"p^t",freq:63,prime:0},{phon:"rid",freq:273,prime:0},{phon:"ril",freq:261,prime:0},{phon:"rili",freq:275,prime:0},{phon:"rab",freq:40,prime:0},{phon:"rak",freq:121,prime:0},{phon:"rak^t",freq:20,prime:0},{phon:"rad",freq:29,prime:0},{phon:"rut",freq:69,prime:0},{phon:"r^b",freq:35,prime:0},{phon:"r^g^d",freq:20,prime:0},{phon:"rul",freq:215,prime:0},{phon:"rupi",freq:20,prime:0},{phon:"r^S",freq:60,prime:0},{phon:"r^s^l",freq:21,prime:0},{phon:"skar",freq:22,prime:0},{phon:"skul",freq:694,prime:0},{phon:"skru",freq:45,prime:0},{phon:"sil",freq:40,prime:0},{phon:"sit",freq:99,prime:0},{phon:"sikr^t",freq:105,prime:0},{phon:"si",freq:809,prime:0},{phon:"sid",freq:84,prime:0},{phon:"sik",freq:128,prime:0},{phon:"Sarp",freq:115,prime:0},{phon:"Si",freq:2860,prime:0},{phon:"Sip",freq:23,prime:0},{phon:"Sit",freq:77,prime:0},{phon:"Sild",freq:21,prime:0},{phon:"Sak",freq:66,prime:0},{phon:"Sut",freq:81,prime:0},{phon:"Sap",freq:108,prime:0},{phon:"Sat",freq:142,prime:0},{phon:"Sr^g",freq:22,prime:0},{phon:"S^t",freq:50,prime:0},{phon:"slip",freq:109,prime:0},{phon:"slit",freq:10,prime:0},{phon:"sl^g",freq:24,prime:0},{phon:"sal^d",freq:90,prime:0},{phon:"sari",freq:49,prime:0},{phon:"spark",freq:20,prime:0},{phon:"spik",freq:259,prime:0},{phon:"spid",freq:104,prime:0},{phon:"spat",freq:110,prime:0},{phon:"star",freq:58,prime:0},{phon:"start",freq:450,prime:0},{phon:"start^l",freq:22,prime:0},{phon:"stil",freq:51,prime:0},{phon:"stip",freq:22,prime:0},{phon:"stak",freq:165,prime:0},{phon:"stap",freq:273,prime:0},{phon:"strik",freq:20,prime:0},{phon:"strit",freq:307,prime:0},{phon:"str^k",freq:59,prime:0},{phon:"str^g^l",freq:93,prime:0},{phon:"st^did",freq:79,prime:0},{phon:"st^di",freq:391,prime:0},{phon:"stup^d",freq:25,prime:0},{phon:"s^bst^tut",freq:46,prime:0},{phon:"s^t^l",freq:26,prime:0},{phon:"s^ksid",freq:62,prime:0},{phon:"s^k",freq:20,prime:0},{phon:"su",freq:39,prime:0},{phon:"sut",freq:73,prime:0},{phon:"sut^b^l",freq:37,prime:0},{phon:"tar",freq:20,prime:0},{phon:"targ^t",freq:67,prime:0},{phon:"ti",freq:29,prime:0},{phon:"tu",freq:26162,prime:0},{phon:"tul",freq:79,prime:0},{phon:"tap",freq:212,prime:0},{phon:"trit",freq:127,prime:0},{phon:"triti",freq:24,prime:0},{phon:"tri",freq:161,prime:0},{phon:"trup",freq:82,prime:0},{phon:"trat",freq:20,prime:0},{phon:"tr^b^l",freq:189,prime:0},{phon:"tr^k",freq:84,prime:0},{phon:"tru",freq:237,prime:0},{phon:"truli",freq:237,prime:0},{phon:"tr^st",freq:76,prime:0},{phon:"tr^sti",freq:35,prime:0},{phon:"tub",freq:55,prime:0},{phon:"^gli",freq:30,prime:0},{phon:"^p",freq:1903,prime:0},{phon:"^s",freq:672,prime:0},{phon:"-",freq:1e3,prime:0}],freqNode:{RDL_rest_s:0,RDL_rest_c:1,RDL_wt_s:0,RDL_wt_c:1,RDL_post_c:0},primeNode:{RDL_rest_s:0,RDL_rest_c:1,RDL_wt_s:0,RDL_wt_c:1,RDL_post_c:0},continuumSpec:"",allophoneRelations:[]}),j=(e,t)=>Array.from(Array(e),(e=>Array(t).fill(0))),H=(e,t,o)=>Array.from(Array(e),(e=>Array.from(Array(t),(e=>Array(o).fill(0))))),X=e=>e.map((e=>[...e])),B=(e,t)=>{let o=0,i=0;for(;0===o;)o=Math.random();for(;0===i;)i=Math.random();return Math.sqrt(-2*Math.log(o))*Math.cos(2*Math.PI*i)*t+e};class U{constructor(e){this.ambiguousPhonemes=[],this.phonemes=e.map((e=>Object.assign({},e))),this.sortPhonemes()}sortPhonemes(){this.phonemes.sort(((e,t)=>e.label.localeCompare(t.label)));for(const[e,t]of this.phonemes.entries())t.index=e;this.ambiguousPhonemes.sort(((e,t)=>e.label.localeCompare(t.label)));for(const[e,t]of this.ambiguousPhonemes.entries())t.index=e}sorted(){return this.phonemes}byIndex(e){return this.phonemes[e]}byLabel(e){return this.phonemes.find((t=>t.label==e))||this.ambiguousPhonemes.find((t=>t.label==e))}spreadPhons(e,t,o,i){if(e.length!=t.length)throw new Error("spread and scale parameters have different scale");o=Math.max(o,0);let r=0;const n=o=>{for(const i of o){i.spreadOffset=0;for(let o=0;o<e.length;o++){const n=e[o]*t[o]*i.durationScalar[0];n>i.spreadOffset&&(i.spreadOffset=Math.ceil(n)),r=Math.max(Math.ceil(n),r)}}};n(this.phonemes),n(this.ambiguousPhonemes);const s=t=>{for(const n of t){n.spread=j(63,4*r),n.norm=0;for(let t=0;t<63;t++)if(n.features[t]>0){const r=Math.floor(t/9),s=(n.features[t]*i-n.features[t]*o)/(e[r]*n.durationScalar[0]),a=Math.floor(e[r]*n.durationScalar[0]);for(let e=0;e<a;e++)n.spread[t][n.spreadOffset+e]=n.features[t]*i-s*e,n.spread[t][n.spreadOffset-e]=n.spread[t][n.spreadOffset+e],n.norm+=2*Math.pow(n.spread[t][n.spreadOffset+e],2)}}};s(this.phonemes),s(this.ambiguousPhonemes)}makePhonemeContinuum(e,t,o){const i=this.byLabel(e),r=this.byLabel(t);if(!i||!r||o<=1||o>U.MAX_STEPS)throw new Error("invalid arguments to makePhonemeContinuum");const n=[];for(let l=0;l<63;l++)n[l]=(r.features[l]-i.features[l])/(o-1);const s=[];for(let l=0;l<7;l++)s[l]=(r.durationScalar[l]-i.durationScalar[l])/(o-1);this.ambiguousPhonemes=[];for(let l=0;l<o;l++){const e=[];for(let o=0;o<63;o++)e[o]=i.features[o]+l*n[o];const t=[];for(let o=0;o<7;o++)t[o]=i.durationScalar[o]+l*s[o];this.ambiguousPhonemes.push({label:l.toString(),features:e,durationScalar:t,phonologicalRole:v.AMBIG})}const a=Math.floor(this.ambiguousPhonemes.length/2);this.ambiguousPhonemes.push({label:"?",features:[...this.ambiguousPhonemes[a].features],durationScalar:[...this.ambiguousPhonemes[a].durationScalar],phonologicalRole:v.AMBIG}),this.sortPhonemes()}}U.MAX_STEPS=9;const z=(e,t)=>e.RDL_rest_s?e.RDL_rest_s*Math.log10(e.RDL_rest_c*t):0;class G extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}class $ extends G{constructor(e="The provided model input contains invalid characters"){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}class J{constructor(e=V()){this.globalFeatureCompetitionIndex=0,this.globalLexicalCompetitionIndex=0,this.globalPhonemeCompetitionIndex=0,this.globalPhonToWordSum=0,this.globalWordToPhonSum=0,this.globalFeatToPhonSum=0,this.globalPhonToFeatSum=0,this.globalFeatSumAll=0,this.globalFeatSumPos=0,this.globalPhonSumAll=0,this.globalPhonSumPos=0,this.globalWordSumAll=0,this.globalWordSumPos=0,this.inputSlice=0,this.__nreps=1,this.config=e,this.phonemes=new U(this.config.phonology),this.reset()}reset(){var e;this.lengthNormalizationScale=1/((e=this.config.lexicon.map((e=>e.phon.length))).reduce(((e,t)=>e+t))/e.length),this.inputSlice=0,this.inputLayer=j(63,this.config.fSlices),this.featLayer=j(63,this.config.fSlices),this.featNet=j(63,this.config.fSlices),this.phonLayer=j(this.config.phonology.length,this.getPSlices()),this.phonNet=j(this.config.phonology.length,this.getPSlices()),this.wordLayer=j(this.config.lexicon.length,this.getPSlices()),this.wordNet=j(this.config.lexicon.length,this.getPSlices()),this.pww=j(this.config.phonology.length,4),this.wpw=j(this.config.phonology.length,4),this.fpw=H(this.config.phonology.length,7,0),this.pfw=H(this.config.phonology.length,7,0);for(let o=0;o<this.config.phonology.length;o++)for(let e=0;e<7;e++)this.fpw[o][e]=Array(2*this.config.spread[e]).fill(0),this.pfw[o][e]=Array(2*this.config.spread[e]).fill(0);if(this.config.continuumSpec&&3==this.config.continuumSpec.trim().length){const e=+this.config.continuumSpec.trim()[2];e>1&&e<10&&this.phonemes.makePhonemeContinuum(this.config.continuumSpec.trim()[0],this.config.continuumSpec.trim()[1],e)}this.phonemes.spreadPhons(this.config.spread,this.config.spreadScale,this.config.min,this.config.max);let t=this.clamp(this.config.rest.F||0);for(let o=0;o<this.config.fSlices;o++)for(let e=0;e<63;e++)this.featLayer[e][o]=t;t=this.clamp(this.config.rest.P||0);for(let o=0;o<this.getPSlices();o++)for(let e=0;e<this.config.phonology.length;e++)this.phonLayer[e][o]=t;t=this.clamp(this.config.rest.W||0);for(let o=0;o<this.getWSlices();o++)for(let e=0;e<this.config.lexicon.length;e++)this.wordLayer[e][o]=t;if(this.config.freqNode.RDL_rest_s)for(let o=0;o<this.getWSlices();o++)for(let e=0;e<this.config.lexicon.length;e++)this.wordLayer[e][o]+=z(this.config.freqNode,this.config.lexicon[e].freq);if(this.config.primeNode.RDL_rest_s)for(let o=0;o<this.getWSlices();o++)for(let e=0;e<this.config.lexicon.length;e++)this.config.lexicon[e].prime>0&&(this.wordLayer[e][o]+=z(this.config.primeNode,this.config.lexicon[e].prime));this.__nreps=this.config.nreps,this.__nreps<=0&&(this.__nreps=1);for(let o=0;o<this.config.phonology.length;o++){let e=0;for(let t=0;t<=4;t++){const o=(4-Math.abs(2-t))/4;e+=o*o}for(let t=0;t<4;t++){const i=(4-Math.abs(2-t))/4;this.pww[o][t]=i/e,this.wpw[o][t]=1*i/e}}for(let o=0;o<this.config.phonology.length;o++)for(let e=0;e<7;e++){let t=0;const i=1*this.config.spread[e],r=Math.floor(i);for(let e=0;e<2*r;e++){const o=(i-Math.abs(r-e))/i;t+=o*o}for(let n=0;n<2*r;n++)this.pfw[o][e][n]=(i-Math.abs(r-n))/i,this.fpw[o][e][n]=this.pfw[o][e][n]/t}this.createInput()}getPSlices(){return Math.floor(this.config.fSlices/this.config.slicesPerPhon)}getWSlices(){return this.getPSlices()}clamp(e){return t=e,o=this.config.min,i=this.config.max,Math.min(Math.max(t,o),i);var t,o,i}createInput(){const e=this.config.modelInput.trim();let t=this.config.deltaInput;for(let o=0;o<e.length&&t<this.config.fSlices;o++)if("{"==e[o]){const i=this.phonemes.byLabel(e[++o]),r=+e[++o],n=this.phonemes.byLabel(e[++o]);if(o+=1,!(i&&n&&i.spread&&i.spreadOffset&&n.spread&&n.spreadOffset))throw new $;const s=t-i.spreadOffset;for(let e=s,t=0;e<s+r;e++,t++)for(let o=0;o<63;o++)e>=0&&e<this.config.fSlices&&(this.inputLayer[o][e]+=i.spread[o][t]);for(let e=s+r,t=r;e<s+2*n.spreadOffset;e++,t++)for(let o=0;o<63;o++)e>=0&&e<this.config.fSlices&&(this.inputLayer[o][e]+=n.spread[o][t]);t+=this.config.deltaInput}else{const i=this.phonemes.byLabel(e[o]);if(!i||!i.spread||!i.spreadOffset)throw new $;const r=t-Math.round(i.spreadOffset);for(let e=r,t=0;e<r+Math.round(2*i.spreadOffset);e++,t++)for(let o=0;o<63;o++)e>=0&&e<this.config.fSlices&&(this.inputLayer[o][e]+=i.spread[o][t]);t+=Math.round(this.config.deltaInput*i.durationScalar[0])}if(0!=this.config.noiseSD)for(let o=0;o<63;o++)for(let e=0;e<this.config.fSlices;e++)this.inputLayer[o][e]+=B(0,this.config.noiseSD);for(let o=0;o<63;o++)for(let e=0;e<this.config.fSlices;e++)this.inputLayer[o][e]=this.clamp(this.inputLayer[o][e]);for(let o=0;o<7;o++)for(let e=0;e<9;e++)this.featNet[9*o+e][0]+=this.inputLayer[9*o+e][0];this.featUpdate()}actFeatures(){this.globalFeatureCompetitionIndex=0;const e=j(7,this.config.fSlices);for(let o=0;o<7;o++)for(let t=0;t<9;t++)for(let i=0;i<this.config.fSlices;i++)this.featLayer[9*o+t][i]>0&&(e[o][i]+=this.featLayer[9*o+t][i]);const t=e.map((e=>e.map((e=>e*(this.config.gamma.F||0)))));if(this.inputSlice<this.config.fSlices)for(let o=0;o<63;o++)for(let e=this.inputSlice+1;e<this.config.fSlices&&e<this.inputSlice+1+this.__nreps;e++){const t=this.clamp((this.config.alpha.IF||0)*this.inputLayer[o][e]);this.featNet[o][e]+=t,this.globalFeatureCompetitionIndex-=t}for(let o=0;o<7;o++)for(let e=0;e<9;e++)for(let i=0;i<this.config.fSlices;i++){const r=Math.max(0,t[o][i]-Math.max(0,this.featLayer[9*o+e][i]*(this.config.gamma.F||0)));this.featNet[9*o+e][i]-=r,this.globalFeatureCompetitionIndex+=r}}featToPhon(){const e=this.config.slicesPerPhon,t=this.getPSlices();this.globalFeatToPhonSum=0;for(let o=0;o<63;o++)for(let i=0;i<this.config.fSlices;i++)if(this.featLayer[o][i]>0)for(const[r,n]of this.phonemes.sorted().entries()){if(0==n.features[o])continue;const s=this.config.spread[Math.floor(o/9)],a=this.config.fSlices-s;let l,h;i<s?(l=0,h=Math.floor((i+s-1)/e)):(h=i>a?t-1:Math.floor((i+s-1)/e),l=Math.floor((i-s)/e+1));let p=s-(i-e*l),f=0;this.featLayer[o][i]>0&&(f=n.features[o]*this.featLayer[o][i]*(this.config.alpha.FP||0));const c=Math.floor(o/9);for(let o=l;o<h+1&&o<t;o++){const t=this.fpw[r][c][p]*f;this.phonNet[r][o]+=t,this.globalFeatToPhonSum+=t,p+=e}}}phonToPhon(){const e=this.getPSlices();let t=Array(e).fill(0),o=0,i=0;for(let r=0;r<e;r++)for(let n=0;n<this.config.phonology.length;n++)if(this.phonLayer[n][r]>0){o=r+1,o>=e?(o=e-1,i=r-1):(i=r-1,i<0&&(i=0));for(let e=i;e<o;e++)t[e]+=this.phonLayer[n][r]*(this.config.gamma.P||0)}this.globalPhonemeCompetitionIndex=0;for(let r=0;r<this.config.phonology.length;r++)for(let n=0;n<e;n++){o=n+1,o>=e?(o=e-1,i=n-1):(i=n-1,i<0&&(i=0));for(let e=i;e<o;e++)t[e]>0&&(this.phonNet[r][n]-=t[e],this.globalPhonemeCompetitionIndex+=t[e]);if(this.phonLayer[r][n]*(this.config.gamma.P||0)>0&&t[n]>0){const e=(o-i)*this.phonLayer[r][n]*(this.config.gamma.P||0);this.phonNet[r][n]+=e,this.globalPhonemeCompetitionIndex-=e}for(let e=0;e<this.config.phonology.length;e++);}}phonToFeat(){var e;const t=this.config.fSlices,o=this.config.slicesPerPhon;this.globalPhonToFeatSum=0;for(let i=0;i<t;i++)for(let r=0;r<7;r++)for(let n=0;n<9;n++){let s=0;for(let l=0;l<this.config.phonology.length;l++)for(let a=0;a<this.getPSlices();a++){let h=Math.floor(Math.abs(a*o-i));h>=t&&(h=t-1),this.phonLayer[l][a]>0&&(s+=this.pfw[l][r][h]*this.phonLayer[l][a]*((null===(e=this.phonemes.byIndex(l))||void 0===e?void 0:e.features[9*r+n])||0))}const a=(this.config.alpha.PF||0)*s;this.featNet[9*r+n][i]+=a,this.globalPhonToFeatSum+=a}}wordToPhon(){let e,t,o,i,r,n=this.config.lexicon;const s=this.getPSlices();this.globalWordToPhonSum=0;for(let a=0;a<n.length;a++)for(let l=0;l<this.getWSlices();l++)if(!(this.wordLayer[a][l]<=0)){e=n[a].phon;for(let h=0;h<e.length;h++){let p=this.phonemes.byLabel(e[h]);if(t=l+2*h,o=t-1,o>=s)break;o<0?(i=1-o,o=0,r=t+2):(r=t+2,r>s-1&&(r=s-1),i=1);for(let e=o;e<r&&e<s&&i<4;e++,i++)if(this.wordLayer[a][l]>0){let t=0;n[a].freq&&this.config.freqNode.RDL_wt_s&&(t=this.config.freqNode.RDL_wt_s*Math.log10(n[a].freq));let o=0;n[a].prime&&this.config.primeNode.RDL_wt_s&&(o=this.config.primeNode.RDL_wt_s*Math.log10(n[a].prime));const r=(1+t+o)*this.wordLayer[a][l]*(this.config.alpha.WP||0)*this.wpw[p.index][i];this.phonNet[p.index][e]+=r,this.globalWordToPhonSum+=r}}}}phonToWord(){const e=this.config.lexicon,t=this.getPSlices();let o,i,r,n,s,a;this.globalPhonToWordSum=0;for(let l=0;l<this.config.phonology.length;l++){s=2,6==this.config.deltaInput&&3==this.config.slicesPerPhon||(s=Math.floor(this.config.deltaInput/this.config.slicesPerPhon));for(let h=0;h<t;h++)if(!(this.phonLayer[l][h]<=0))e:for(let p=0;p<e.length;p++){const f=e[p].phon;a=f.length;for(let c=0;c<a;c++)if(f.charAt(c)==this.phonemes.byIndex(l).label.charAt(0)){if(o=h-s*c,o<-s)continue e;i=1+o-s,i<0?(r=1-i,i=0,n=o+s):(n=o+s,n>t-1&&(n=t-1),r=1);let a=2*this.phonLayer[l][h]*(this.config.alpha.PW||0),f=0;this.config.freqNode.RDL_wt_s&&e[p].freq&&(f=this.config.freqNode.RDL_wt_s*Math.log10(e[p].freq));let m=0;this.config.primeNode.RDL_wt_s&&e[p].prime&&(m=this.config.primeNode.RDL_wt_s*Math.log10(e[p].prime));for(let e=i;e<n&&e<this.getWSlices();e++,r++)if(r>=0&&r<4){const t=(1+f+m)*this.pww[l][r]*a;this.wordNet[p][e]+=t,this.globalPhonToWordSum+=t}}}}}wordToWord(){const e=this.getPSlices(),t=Array(e).fill(0),o=Array(e).fill(0),i=this.config.lexicon;for(let r=0;r<e;r++)for(let t=0;t<i.length;t++){let n=r;n<0&&(n=0);let s=r+2*i[t].phon.length;
//!! wstart + (wlength*phone width) + (1/2 phone width)
s>e&&(s=e-1);for(let e=n;e<s;e++)this.wordLayer[t][r]>0&&(o[e]+=this.wordLayer[t][r]*this.wordLayer[t][r])}for(let r=0;r<e;r++)o[r]>3&&(o[r]=3),t[r]=o[r]*(this.config.gamma.W||0);this.globalLexicalCompetitionIndex=0;for(let r=0;r<e;r++)for(let o=0;o<i.length;o++){let n=r;n<0&&(n=0);let s=r+2*i[o].phon.length;
//!! wstart + (wlength*phone width) + (1/2 phone width)
s>e&&(s=e-1);for(let e=n;e<s;e++)if(this.config.lengthNormalization){let n=1/(i[o].phon.length*this.lengthNormalizationScale);n>1&&(n=1);const s=t[e]*n;this.wordNet[o][r]-=s,this.globalLexicalCompetitionIndex+=s}else this.wordNet[o][r]-=t[e],this.globalLexicalCompetitionIndex+=t[e];if(this.wordLayer[o][r]>0)if(this.config.lengthNormalization){let e=1/(i[o].phon.length*this.lengthNormalizationScale);e>1&&(e=1);const t=(s-n)*(this.wordLayer[o][r]*this.wordLayer[o][r]*(this.config.gamma.W||0))*e;this.wordNet[o][r]+=t,this.globalLexicalCompetitionIndex-=t}else{const e=(s-n)*(this.wordLayer[o][r]*this.wordLayer[o][r]*(this.config.gamma.W||0));this.wordNet[o][r]+=e,this.globalLexicalCompetitionIndex-=e}}}featUpdate(){const{min:e,max:t}=this.config;this.globalFeatSumAll=0,this.globalFeatSumPos=0;for(let o=0;o<this.config.fSlices;o++)for(let i=0;i<63;i++){this.config.stochasticitySD&&(this.featNet[i][o]+=B(0,this.config.stochasticitySD));let r=this.featLayer[i][o];this.featNet[i][o]>0?r+=(t-r)*this.featNet[i][o]:this.featNet[i][o]<0&&(r+=(r-e)*this.featNet[i][o]);let n=this.featLayer[i][o]-(this.config.rest.F||0);r-=(this.config.decay.F||0)*n,r>t&&(r=t),r<e&&(r=e),this.featLayer[i][o]=r,this.globalFeatSumAll+=r,r>0&&(this.globalFeatSumPos+=r)}this.featNet=j(63,this.config.fSlices)}phonUpdate(){const e=this.getPSlices();this.globalPhonSumAll=0,this.globalPhonSumPos=0;for(let t=0;t<e;t++)for(let e=0;e<this.config.phonology.length;e++){let o;this.config.stochasticitySD&&(this.phonNet[e][t]+=B(0,this.config.stochasticitySD)),o=this.phonNet[e][t]>=0?this.config.max-this.phonLayer[e][t]:this.phonLayer[e][t]-this.config.min;const i=this.phonLayer[e][t]-(this.config.rest.P||0);this.phonLayer[e][t]+=o*this.phonNet[e][t]-(this.config.decay.P||0)*i,this.phonLayer[e][t]=this.clamp(this.phonLayer[e][t]),this.globalPhonSumAll+=this.phonLayer[e][t],this.phonLayer[e][t]>0&&(this.globalPhonSumPos+=this.phonLayer[e][t])}this.phonNet=j(this.config.phonology.length,e)}wordUpdate(){const e=this.getWSlices(),{min:t,max:o}=this.config;this.globalWordSumAll=0,this.globalWordSumPos=0;for(let i=0;i<this.config.lexicon.length;i++)for(let r=0;r<e;r++){this.wordNet[i][r]*=this.config.atten,this.wordNet[i][r]-=this.config.bias,this.config.stochasticitySD&&(this.wordNet[i][r]+=B(0,this.config.stochasticitySD));let e,n=this.wordLayer[i][r];this.wordNet[i][r]>0?n+=(o-n)*this.wordNet[i][r]:this.wordNet[i][r]<0&&(n+=(n-t)*this.wordNet[i][r]),e=this.config.freqNode.RDL_rest_s&&this.config.lexicon[i].freq>0&&this.config.primeNode.RDL_rest_s&&this.config.lexicon[i].prime>0?this.wordLayer[i][r]-((this.config.rest.W||0)+z(this.config.freqNode,this.config.lexicon[i].freq))+((this.config.rest.W||0)+z(this.config.primeNode,this.config.lexicon[i].prime)):this.config.freqNode.RDL_rest_s&&this.config.lexicon[i].freq>0?this.wordLayer[i][r]-((this.config.rest.W||0)+z(this.config.freqNode,this.config.lexicon[i].freq)):this.config.primeNode.RDL_rest_s&&this.config.lexicon[i].prime>0?this.wordLayer[i][r]-((this.config.rest.W||0)+z(this.config.primeNode,this.config.lexicon[i].prime)):this.wordLayer[i][r]-(this.config.rest.W||0),n-=(this.config.decay.W||0)*e,n>o&&(n=o),n<t&&(n=t),this.wordLayer[i][r]=n,this.globalWordSumAll+=n,n>0&&(this.globalWordSumPos+=n)}this.wordNet=j(this.config.lexicon.length,e)}cycle(){this.actFeatures();const e=this.config.nreps<0?Math.abs(this.config.nreps):1;for(let t=0;t<e;t++)this.featToPhon(),this.phonToPhon(),this.phonToWord(),this.wordToPhon(),this.wordToWord(),this.featUpdate(),this.phonUpdate(),this.wordUpdate();this.inputSlice+=this.__nreps}}function K(e,t){var o;const i=(null===(o=e[0])||void 0===o?void 0:o.length)||0,r=[];for(let n=0;n<i;n++)for(let t=0;t<e.length;t++)r.push([t,...e[t][n]]);return r.map((e=>[e[0],...t,e.slice(1)].join(", "))).join("\n")+"\n"}class Q extends class{constructor(e=V()){this.config=e,this.inputLayer=[],this.featLayer=[],this.phonLayer=[],this.wordLayer=[],this.globalFeatureCompetition=[],this.globalLexicalCompetition=[],this.globalPhonemeCompetition=[],this.globalPhonToWordSum=[],this.globalWordToPhonSum=[],this.globalFeatToPhonSum=[],this.globalPhonToFeatSum=[],this.globalFeatSumAll=[],this.globalFeatSumPos=[],this.globalPhonSumAll=[],this.globalPhonSumPos=[],this.globalWordSumAll=[],this.globalWordSumPos=[],this.tn=new J(this.config),this.phonemes=this.tn.phonemes,this.maxDuration=Math.max(6*this.config.modelInput.length*this.config.deltaInput,this.config.fSlices)}getStepsRun(){return this.inputLayer.length}cycle(e){e=Math.min(this.maxDuration,e);for(let t=0;t<e;t++)this.inputLayer.push(X(this.tn.inputLayer)),this.featLayer.push(X(this.tn.featLayer)),this.phonLayer.push(X(this.tn.phonLayer)),this.wordLayer.push(X(this.tn.wordLayer)),this.globalFeatureCompetition.push(this.tn.globalFeatureCompetitionIndex),this.globalLexicalCompetition.push(this.tn.globalLexicalCompetitionIndex),this.globalPhonemeCompetition.push(this.tn.globalPhonemeCompetitionIndex),this.globalPhonToWordSum.push(this.tn.globalPhonToWordSum),this.globalWordToPhonSum.push(this.tn.globalWordToPhonSum),this.globalFeatToPhonSum.push(this.tn.globalFeatToPhonSum),this.globalPhonToFeatSum.push(this.tn.globalPhonToFeatSum),this.globalFeatSumAll.push(this.tn.globalFeatSumAll),this.globalFeatSumPos.push(this.tn.globalFeatSumPos),this.globalPhonSumAll.push(this.tn.globalPhonSumAll),this.globalPhonSumPos.push(this.tn.globalPhonSumPos),this.globalWordSumAll.push(this.tn.globalWordSumAll),this.globalWordSumPos.push(this.tn.globalWordSumPos),this.tn.cycle()}getInputData(e){return this.inputLayer[e].map(((e,t)=>[t,...e.map((e=>e.toFixed(4)))]))}getFeatureData(e){return this.featLayer[e].map(((e,t)=>[t,...e.map((e=>e.toFixed(4)))]))}getPhonemeData(e){return this.phonLayer[e].map(((e,t)=>{var o;return[this.phonemes&&(null===(o=this.phonemes.byIndex(t))||void 0===o?void 0:o.label)||"?",...e.map((e=>e.toFixed(4)))]}))}getWordData(e){return this.wordLayer[e].map(((e,t)=>[this.config.lexicon[t].phon,...e.map((e=>e.toFixed(4)))]))}getLevelsAndFlowData(e){return[[this.globalFeatSumAll[e],this.globalFeatSumPos[e],this.globalFeatureCompetition[e],this.globalPhonSumAll[e],this.globalPhonSumPos[e],this.globalPhonemeCompetition[e],this.globalWordSumAll[e],this.globalWordSumPos[e],this.globalLexicalCompetition[e],this.globalFeatToPhonSum[e],this.globalPhonToFeatSum[e],this.globalPhonToWordSum[e],this.globalWordToPhonSum[e]]]}getAllInputData(){return Array.from({length:this.inputLayer.length},((e,t)=>this.getInputData(t)))}getAllFeatureData(){return Array.from({length:this.featLayer.length},((e,t)=>this.getFeatureData(t)))}getAllPhonemeData(){return Array.from({length:this.phonLayer.length},((e,t)=>this.getPhonemeData(t)))}getAllWordData(){return Array.from({length:this.wordLayer.length},((e,t)=>this.getWordData(t)))}getAllLevelsAndFlowData(){return Array.from({length:this.globalLexicalCompetition.length},((e,t)=>this.getLevelsAndFlowData(t)))}serializeInputData(e=[]){const t=[this.config.modelInput,...e];return K(this.getAllInputData(),t)}serializeFeatureData(e=[]){const t=[this.config.modelInput,...e];return K(this.getAllFeatureData(),t)}serializePhonemeData(e=[]){const t=[this.config.modelInput,...e];return K(this.getAllPhonemeData(),t)}serializeWordData(e=[]){const t=[this.config.modelInput,...e];return K(this.getAllWordData(),t)}serializeLevelsAndFlowData(e=[]){const t=[this.config.modelInput,...e];return K(this.getAllLevelsAndFlowData(),t)}getSimData(){return{input:this.getAllInputData(),feature:this.getAllFeatureData(),phoneme:this.getAllPhonemeData(),word:this.getAllWordData(),levelsAndFlows:this.getAllLevelsAndFlowData()}}}{writeFiles(){}async appendInputData(){}async appendFeatureData(){}async appendPhonemeData(){}async appendWordData(){}async appendLevelsAndFlowData(){}async appendFiles(){}}var Y,Z,ee,te,oe,ie,re,ne,se,ae;(Z=Y||(Y={}))[Z.PHONEMES=0]="PHONEMES",Z[Z.WORDS=1]="WORDS",(te=ee||(ee={}))[te.RESPONSE_PROBABILITIES=0]="RESPONSE_PROBABILITIES",te[te.ACTIVATIONS=1]="ACTIVATIONS",te[te.COMPETITION_INDEX=2]="COMPETITION_INDEX",(ie=oe||(oe={}))[ie.AVERAGE=0]="AVERAGE",ie[ie.MAX_POSTHOC=1]="MAX_POSTHOC",ie[ie.STATIC=2]="STATIC",ie[ie.FRAUENFELDER=3]="FRAUENFELDER",ie[ie.MAX_ADHOC=4]="MAX_ADHOC",ie[ie.MAX_ADHOC_2=5]="MAX_ADHOC_2",(ne=re||(re={}))[ne.NORMAL=0]="NORMAL",ne[ne.FORCED=1]="FORCED",(ae=se||(se={}))[ae.RAW=0]="RAW",ae[ae.FIRST_DERIVATIVE=1]="FIRST_DERIVATIVE",ae[ae.SECOND_DERIVATIVE=2]="SECOND_DERIVATIVE";const le=(e,t)=>{const o=[];for(const i of e)for(let e=0;e<t.length;e++)i==t[e]&&o.push(e);return o},he=(e,t,o)=>{let i=0,r=0;for(let n=t-Math.floor(o/2);n<t+Math.floor(o/2);n++)if(!(n<0)){if(n>=e.length)break;i+=e[n],r++}return i/=r,i},pe=(e,t,o)=>{const i=[],r=(e=>{let t=[];for(let o=1;o<=e+1;o++)t[o-1]=o;return t})(o);for(let n=0;n<o-1;n++){let o,s=0,a=0;for(let i=Math.floor(-t/2);i<t/2&&i<e.length;i++)if(o=n+i,!(o<0)){if(o>=r.length)break;s+=(r[o]-he(r,n,t))*(e[o]-he(e,n,t)),a+=(r[o]-he(r,n,t))*(r[o]-he(r,n,t))}i[n]=s/a}return i},fe=e=>{const{sim:t,domain:o=Y.WORDS,itemsToWatch:i=10,calculationType:r=oe.STATIC,alignment:n=4,choice:s=re.NORMAL,kValue:a=4,competType:l=se.RAW,competSlope:h=1}=e;let p;p=a<0?ee.COMPETITION_INDEX:0===a?ee.ACTIVATIONS:ee.RESPONSE_PROBABILITIES;const f=t.getStepsRun();if(0==f)return[];if(p==ee.RESPONSE_PROBABILITIES||p==ee.ACTIVATIONS){let l,h,u;if(l=Array.isArray(i)?i:(e=>{const t=e.domain==Y.WORDS?e.sim.config.lexicon.map((e=>e.phon)):e.sim.phonemes.sorted().map((e=>e.label)),o=e.excludeSilence?t.filter((e=>!/^-+$/.test(e))):t;return fe(Object.assign(Object.assign({},e),{itemsToWatch:t})).map(((e,t)=>[e,o[t]])).sort((([e],[t])=>Math.max(...t.data.map((e=>e.y)))-Math.max(...e.data.map((e=>e.y))))).slice(0,+e.itemsToWatch).map((([e,t])=>t))})(e),0==l.length)return[];o==Y.WORDS?(h=le(l,t.config.lexicon.map((e=>e.phon))),u=t.wordLayer):(h=le(l,t.phonemes.sorted().map((e=>e.label))),u=t.phonLayer);let d=u[0].length,b=Math.floor(t.config.fSlices/t.config.slicesPerPhon),S=H(f,d,b);if(p==ee.RESPONSE_PROBABILITIES)for(let e=0;e<f;e++)for(let i=0;i<d;i++)for(let r=0;r<b;r++){const n=u[e][i][r];S[e][i][r]=Math.exp(n*(a||1)),t.config.freqNode.RDL_post_c&&o==Y.WORDS&&(S[e][i][r]=(c=t.config.freqNode,m=t.config.lexicon[i].freq,g=S[e][i][r],c.RDL_post_c?g*Math.log10(c.RDL_post_c+m):0))}const q=j(d,f),y=Array(d).fill(0);if(r==oe.MAX_ADHOC)for(let e=0;e<d;e++)for(let t=0;t<f;t++){let o=-1e3;for(let i=0;i<b;i++)u[t][e][i]>o&&(o=u[t][e][i],q[e][t]=i)}else if(r==oe.MAX_ADHOC_2)for(let e=0;e<d;e++)for(let t=0;t<f;t++){let o=-1e3;for(let i=0;i<b;i++)u[t][e][i]>o&&(o=u[t][e][i],q[e][t]=i)}else if(r==oe.MAX_POSTHOC)for(let e=0;e<d;e++){let t=-1e3;for(let o=0;o<f;o++)for(let i=0;i<b;i++)u[o][e][i]>t&&(t=u[o][e][i],y[e]=i)}let _=Array(f).fill(0),A=j(f,d);if(p==ee.RESPONSE_PROBABILITIES)for(let e=0;e<f;e++)if(_[e]=0,s==re.NORMAL)switch(r){case oe.AVERAGE:for(let t=0;t<b;t++)for(let o=0;o<d;o++)_[e]+=S[e][o][t];break;case oe.MAX_ADHOC:for(let t=0;t<d;t++)for(let o=0;o<d;o++)A[e][o]+=S[e][t][q[o][e]];break;case oe.MAX_ADHOC_2:for(let t=0;t<d;t++)for(let o=0;o<d;o++)A[e][o]+=S[e][t][q[t][e]];break;case oe.MAX_POSTHOC:for(let t=0;t<d;t++)_[e]+=S[e][t][y[t]];break;case oe.STATIC:for(let t=0;t<d;t++)_[e]+=S[e][t][n];break;case oe.FRAUENFELDER:for(let i=0;i<d;i++)for(let r=0;r<d;r++)for(let s=0;s<b;s++)if(o==Y.WORDS){const o=Math.floor(t.config.deltaInput/t.config.slicesPerPhon)*t.config.lexicon[i].phon.length,a=Math.floor(t.config.deltaInput/t.config.slicesPerPhon)*t.config.lexicon[r].phon.length;(n==s||s>n&&n+o>=s||s<n&&s+a>=n)&&(A[e][i]+=S[e][r][s])}else s!=n&&s!=n-1&&s!=n+1||(A[e][i]+=S[e][i][s])}else if(s==re.FORCED)switch(r){case oe.AVERAGE:for(let t=0;t<b;t++)for(let o=0;o<h.length;o++)_[e]+=S[e][h[o]][t];break;case oe.MAX_ADHOC:for(let t=0;t<h.length;t++)for(let o=0;o<h.length;o++)A[e][h[t]]+=S[e][h[o]][q[h[t]][e]];break;case oe.MAX_ADHOC_2:for(let t=0;t<h.length;t++)for(let o=0;o<h.length;o++)A[e][h[t]]+=S[e][h[o]][q[h[t]][e]];break;case oe.MAX_POSTHOC:for(let t=0;t<h.length;t++)_[e]+=S[e][h[t]][y[h[t]]];break;case oe.STATIC:for(let t=0;t<h.length;t++)_[e]+=S[e][h[t]][n];break;case oe.FRAUENFELDER:for(let i=0;i<h.length;i++)for(let r=0;r<h.length;r++)for(let s=0;s<b;s++)if(o==Y.WORDS){const o=Math.floor(t.config.deltaInput/t.config.slicesPerPhon)*t.config.lexicon[h[i]].phon.length,a=Math.floor(t.config.deltaInput/t.config.slicesPerPhon)*t.config.lexicon[h[r]].phon.length;(n<=s+a&&n>=s&&a>0&&o>0||s<=n+o&&s>=n&&a>0&&o>0)&&(A[e][h[i]]+=S[e][h[r]][s])}else s!=n&&s!=n-1&&s!=n+1||(A[e][h[i]]+=S[e][h[r]][s])}let P,L=j(h.length,f);for(let e=0;e<h.length;e++)for(let t=0;t<f;t++){let o,i=0;switch(o=p==ee.RESPONSE_PROBABILITIES?S:u,r){case oe.AVERAGE:for(let r=0;r<b;r++)i+=o[t][h[e]][r];i/=b;break;case oe.MAX_ADHOC:case oe.MAX_ADHOC_2:i=o[t][h[e]][q[h[e]][t]];break;case oe.MAX_POSTHOC:i=o[t][h[e]][y[h[e]]];break;case oe.STATIC:i=o[t][h[e]][n];break;case oe.FRAUENFELDER:i=o[t][h[e]][n]+o[t][h[e]][n+1]}if(p==ee.RESPONSE_PROBABILITIES)switch(r){case oe.AVERAGE:L[e][t]=i/_[t];break;case oe.MAX_ADHOC:case oe.MAX_ADHOC_2:L[e][t]=i/A[t][h[e]];break;case oe.MAX_POSTHOC:case oe.STATIC:L[e][t]=i/_[t];break;case oe.FRAUENFELDER:L[e][t]=i/A[t][h[e]]}else L[e][t]=i}const D=[];for(let e=0;e<h.length;e++){P=o==Y.WORDS?{label:t.config.lexicon[h[e]].phon,data:[]}:{label:t.phonemes.sorted()[h[e]].label,data:[]};for(let t=0;t<f;t++)P.data.push({x:t,y:L[e][t]});switch(r){case oe.MAX_ADHOC:case oe.MAX_ADHOC_2:P.label+=` [${q[h[e]].join(",")}]`;break;case oe.MAX_POSTHOC:P.label+=` [${y[h[e]]}]`;break;case oe.STATIC:case oe.FRAUENFELDER:P.label+=` [${n}]`}D.push(P)}return D}{let e;const i=[];let r;if(o==Y.WORDS?(r=t.globalLexicalCompetition,e={label:"Lexical Competition",data:[]}):(r=t.globalPhonemeCompetition,e={label:"Phoneme Competition",data:[]}),l==se.RAW){for(let t=0;t<f;t++)e.data.push({x:t,y:r[t]});i.push(e)}else if(l==se.FIRST_DERIVATIVE){const t=pe(r,h,f);for(let o=0;o<t.length;o++)e.data.push({x:o,y:t[o]});i.push(e)}else if(l==se.SECOND_DERIVATIVE){const t=pe(r,h,f-1),o=pe(t,h,f-2);for(let i=0;i<o.length;i++)e.data.push({x:i,y:o[i]});i.push(e)}return i}var c,m,g};function ce(e,t=!1){return function(e,t=!1){return e.length>0?[["cycle",...e.map((e=>t?e.label.padEnd(18):e.label))],...Array.from(Array(e[0].data.length),((t,o)=>[o,...e.map((e=>{var t;return(null===(t=e.data[o].y)||void 0===t?void 0:t.toFixed(18))||NaN}))]))]:[]}(e,t).map((e=>e.join("\t"))).join("\n")}const me=e=>e?e.map((e=>e.join("\t"))).join("\n"):"",ge=["#e6194b","#3cb44b","#ffe119","#4363d8","#f58231","#911eb4","#46f0f0","#f032e6","#bcf60c","#fabebe","#008080","#e6beff","#9a6324","#fffac8","#800000","#aaffc3","#808000","#ffd8b1","#000075","#808080","#000000"];class ue{constructor(){h(this,"_config",y(V())),h(this,"_analysisConfig",y({domain:Y.WORDS,itemsToWatch:10,calculationType:oe.STATIC,alignment:4,choice:re.NORMAL,kValue:0,competType:se.RAW,competSlope:4,excludeSilence:!1})),h(this,"_sortedPhonemes",_((()=>[...this.config.phonology].sort(((e,t)=>e.label.localeCompare(t.label)))))),h(this,"_sim",A(null)),h(this,"_cyclesToCalculate",A(60)),h(this,"_calculatedCycles",_((()=>{var e;return(null==(e=this._sim.value)?void 0:e.getStepsRun())||0}))),h(this,"_currentCycle",A(0)),h(this,"_formattedInputData",_((()=>{var e;return me(null==(e=this._sim.value)?void 0:e.getInputData(this._currentCycle.value))}))),h(this,"_formattedFeatureData",_((()=>{var e;return me(null==(e=this._sim.value)?void 0:e.getFeatureData(this._currentCycle.value))}))),h(this,"_formattedPhonemeData",_((()=>{var e;return me(null==(e=this._sim.value)?void 0:e.getPhonemeData(this._currentCycle.value))}))),h(this,"_formattedWordData",_((()=>{var e;return me(null==(e=this._sim.value)?void 0:e.getWordData(this._currentCycle.value))}))),h(this,"_formattedLevelsAndFlowData",_((()=>{var e;return me(null==(e=this._sim.value)?void 0:e.getAllLevelsAndFlowData().map((([e],t)=>[t,...e.map((e=>e.toFixed(13).padEnd(18," ")))])))}))),h(this,"_analysisData",A([])),h(this,"_formattedAnalysisData",_((()=>ce(this._analysisData.value,!0)))),h(this,"_useBoxChart",A(!1)),h(this,"_isModelInputValid",A(!0))}get config(){return this._config}get analysisConfig(){return this._analysisConfig}get sortedPhonemes(){return this._sortedPhonemes}get sim(){return this._sim}get cyclesToCalculate(){return this._cyclesToCalculate}get calculatedCycles(){return this._calculatedCycles}get currentCycle(){return this._currentCycle}get formattedInputData(){return this._formattedInputData}get formattedFeatureData(){return this._formattedFeatureData}get formattedPhonemeData(){return this._formattedPhonemeData}get formattedWordData(){return this._formattedWordData}get formattedLevelsAndFlowData(){return this._formattedLevelsAndFlowData}get analysisData(){return this._analysisData}get formattedAnalysisData(){return this._formattedAnalysisData}get useBoxChart(){return this._useBoxChart}get isModelInputValid(){return this._isModelInputValid}updateAnalysis(){this._analysisData.value=fe(l(a({},this.analysisConfig),{sim:this.sim.value})).map(((e,t)=>l(a({},e),{fill:!1,borderColor:ge[t],showLine:!0})))}runSimulation(){this._isModelInputValid.value=!0;try{const e=JSON.parse(JSON.stringify(this._config));console.time("trace.js");const t=new Q(e);t.cycle(this._cyclesToCalculate.value),console.timeEnd("trace.js"),this._currentCycle.value=Math.min(Math.max(this.currentCycle.value,0),this._calculatedCycles.value),this._sim.value=t,this.updateAnalysis()}catch(e){throw e instanceof $&&(this._isModelInputValid.value=!1),e}}}const de=Symbol(),be=()=>{const e=new ue;return S(de,e),e},Se=()=>q(de);var qe=p({name:"App",components:{NavigationTabs:M},setup(){const e=[{label:"Config",component:P((()=>w((()=>import("./ConfigTab.e8f0f6f2.js")),["assets/ConfigTab.e8f0f6f2.js","assets/ConfigTab.b810d923.css","assets/ModelInputChart.0ca8287d.js","assets/vendor.66dd1abc.js","assets/BaseChart.2b94d205.js"])))},{label:"Simulation",component:P((()=>w((()=>import("./SimulationTab.f9fba2d1.js")),["assets/SimulationTab.f9fba2d1.js","assets/SimulationTab.54c345bc.css","assets/SimulationToolbar.564ac2aa.js","assets/SimulationToolbar.478aa04a.css","assets/vendor.66dd1abc.js","assets/ModelInputChart.0ca8287d.js","assets/BaseChart.2b94d205.js"])))},{label:"Chart",component:P((()=>w((()=>import("./ChartTab.140219a1.js")),["assets/ChartTab.140219a1.js","assets/ChartTab.3dc233e5.css","assets/SimulationToolbar.564ac2aa.js","assets/SimulationToolbar.478aa04a.css","assets/vendor.66dd1abc.js","assets/BaseChart.2b94d205.js"])))},{label:"Chart Data",component:P((()=>w((()=>import("./ChartDataTab.b8a776d8.js")),["assets/ChartDataTab.b8a776d8.js","assets/DataTab.f237448f.js","assets/DataTab.57306843.css","assets/SimulationToolbar.564ac2aa.js","assets/SimulationToolbar.478aa04a.css","assets/vendor.66dd1abc.js"])))},{label:"Input",component:P((()=>w((()=>import("./InputTab.2a2f7d5a.js")),["assets/InputTab.2a2f7d5a.js","assets/DataTab.f237448f.js","assets/DataTab.57306843.css","assets/SimulationToolbar.564ac2aa.js","assets/SimulationToolbar.478aa04a.css","assets/vendor.66dd1abc.js"])))},{label:"Feature",component:P((()=>w((()=>import("./FeatureTab.56576ab1.js")),["assets/FeatureTab.56576ab1.js","assets/DataTab.f237448f.js","assets/DataTab.57306843.css","assets/SimulationToolbar.564ac2aa.js","assets/SimulationToolbar.478aa04a.css","assets/vendor.66dd1abc.js"])))},{label:"Phoneme",component:P((()=>w((()=>import("./PhonemeTab.71ba65ca.js")),["assets/PhonemeTab.71ba65ca.js","assets/DataTab.f237448f.js","assets/DataTab.57306843.css","assets/SimulationToolbar.564ac2aa.js","assets/SimulationToolbar.478aa04a.css","assets/vendor.66dd1abc.js"])))},{label:"Word",component:P((()=>w((()=>import("./WordTab.b8bba192.js")),["assets/WordTab.b8bba192.js","assets/DataTab.f237448f.js","assets/DataTab.57306843.css","assets/SimulationToolbar.564ac2aa.js","assets/SimulationToolbar.478aa04a.css","assets/vendor.66dd1abc.js"])))},{label:"Levels and Flow",component:P((()=>w((()=>import("./LevelsAndFlowTab.5816302e.js")),["assets/LevelsAndFlowTab.5816302e.js","assets/DataTab.f237448f.js","assets/DataTab.57306843.css","assets/SimulationToolbar.564ac2aa.js","assets/SimulationToolbar.478aa04a.css","assets/vendor.66dd1abc.js"])))}],t=A(0);return{labels:e.map((e=>e.label)),activeIndex:t,activeComponent:_((()=>e[t.value].component)),store:be()}}});var ye={nav:"_nav_19fpx_2",main:"_main_19fpx_6"};const _e=N("loading...");(qe.__cssModules={}).$style=ye,qe.render=function(e,t,o,i,r,n){const s=L("NavigationTabs");return d(),f(m,null,[c("nav",{class:u(e.$style.nav)},[D(s,{labels:e.labels,"active-index":e.activeIndex,"onUpdate:active-index":t[0]||(t[0]=t=>e.activeIndex=t),"is-boxed":""},null,8,["labels","active-index"])],2),c("main",{class:u(e.$style.main)},[(d(),I(O,null,{default:R((()=>[(d(),I(T(e.activeComponent)))])),fallback:R((()=>[_e])),_:1}))],2)],64)},x(qe).mount("#app");export{J as T,M as _,ee as a,Y as b,W as c,se as d,re as e,oe as f,Se as g};
