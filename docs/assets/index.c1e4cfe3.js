var Ne=Object.defineProperty,we=Object.defineProperties;var Re=Object.getOwnPropertyDescriptors;var ge=Object.getOwnPropertySymbols;var xe=Object.prototype.hasOwnProperty,Ee=Object.prototype.propertyIsEnumerable;var re=(s,e,r)=>e in s?Ne(s,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):s[e]=r,se=(s,e)=>{for(var r in e||(e={}))xe.call(e,r)&&re(s,r,e[r]);if(ge)for(var r of ge(e))Ee.call(e,r)&&re(s,r,e[r]);return s},ne=(s,e)=>we(s,Re(e));var I=(s,e,r)=>(re(s,typeof e!="symbol"?e+"":e,r),r);import{d as ue,c as G,a as J,F as de,r as ve,n as K,o as H,t as Me,i as Q,b as Se,e as ae,f as Y,g as Ce,h as Z,j as Fe,p as be,k as ke,l as Te,m as qe,q as w,s as C,u as le,v as F,w as We,x as Ae,y as Le,S as Ve,z as He,A as Be,B as Xe,C as je}from"./vendor.9f3413dc.js";const $e=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function r(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerpolicy&&(o.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?o.credentials="include":t.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(t){if(t.ep)return;t.ep=!0;const o=r(t);fetch(t.href,o)}};$e();const Ue="modulepreload",Pe={},ze="/tracejs/",k=function(e,r){return!r||r.length===0?e():Promise.all(r.map(i=>{if(i=`${ze}${i}`,i in Pe)return;Pe[i]=!0;const t=i.endsWith(".css"),o=t?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${i}"]${o}`))return;const n=document.createElement("link");if(n.rel=t?"stylesheet":Ue,t||(n.as="script",n.crossOrigin=""),n.href=i,document.head.appendChild(n),t)return new Promise((f,p)=>{n.addEventListener("load",f),n.addEventListener("error",p)})})).then(()=>e())};var _e=(s,e)=>{const r=s.__vccOpts||s;for(const[i,t]of e)r[i]=t;return r};const Ge=ue({name:"NavigationTabs",props:{labels:{type:Array,required:!0},activeIndex:{type:Number,default:0},isBoxed:{type:Boolean,default:!1}},emits:["update:activeIndex"],setup(s,{emit:e}){return{setActiveIndex:r=>e("update:activeIndex",r)}}}),Je={style:{padding:"0.25rem 0 0 0.5rem"}},Ke=["onClick"];function Qe(s,e,r,i,t,o){return H(),G("div",{class:K({tabs:!0,"is-boxed":s.isBoxed})},[J("ul",Je,[(H(!0),G(de,null,ve(s.labels,(n,f)=>(H(),G("li",{key:f,class:K({"is-active":s.activeIndex===f})},[J("a",{onClick:p=>s.setActiveIndex(f)},Me(n),9,Ke)],2))),128))])],2)}var Ye=_e(Ge,[["render",Qe]]);class Ze extends Error{constructor(e){super(e);Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}class he extends Ze{constructor(e="The provided model input contains invalid characters"){super(e);Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}var y;(function(s){s[s.NORMAL=1]="NORMAL",s[s.AMBIG=2]="AMBIG",s[s.ALLOPHONE=3]="ALLOPHONE",s[s.OTHER=4]="OTHER"})(y||(y={}));const P=7,L=9,Dt=()=>({label:"",features:Array(L*P).fill(0),durationScalar:Array(P).fill(1),phonologicalRole:y.NORMAL}),pe=()=>({modelInput:"-^br^pt-",spread:[6,6,6,6,6,6,6],spreadScale:[1,1,1,1,1,1,1],min:-.3,max:1,nreps:1,slicesPerPhon:3,fSlices:99,decay:{F:.01,P:.03,W:.05},rest:{F:-.1,P:-.1,W:-.01},alpha:{IF:1,FP:.02,PW:.05,WP:.03,PF:0},gamma:{F:.04,P:.04,W:.03},deltaInput:6,noiseSD:0,stochasticitySD:0,atten:1,bias:0,learningrate:0,lengthNormalization:0,phonology:[{label:"p",features:[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,.2,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:y.NORMAL},{label:"b",features:[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,.2,1,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:y.NORMAL},{label:"t",features:[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,.2,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:y.NORMAL},{label:"d",features:[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,.2,1,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:y.NORMAL},{label:"k",features:[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,.1,.3,1,.3,.1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,.2,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:y.NORMAL},{label:"g",features:[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,.1,.3,1,.3,.1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,.2,1,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:y.NORMAL},{label:"s",features:[0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,.3,.1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:y.NORMAL},{label:"S",features:[0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,.1,.3,1,.3,.1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:y.NORMAL},{label:"r",features:[0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,.5,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:y.NORMAL},{label:"l",features:[0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,.5,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:y.NORMAL},{label:"a",features:[1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,.1,.3,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:y.NORMAL},{label:"i",features:[1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,.3,.1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:y.NORMAL},{label:"u",features:[1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,.1,.3,1,.3,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:y.NORMAL},{label:"^",features:[0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,.1,.3,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:y.NORMAL},{label:"-",features:[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1],durationScalar:[1,1,1,1,1,1,1],phonologicalRole:y.NORMAL}],lexicon:[{phon:"^",freq:23248,prime:0},{phon:"^br^pt",freq:37,prime:0},{phon:"^dapt",freq:71,prime:0},{phon:"^d^lt",freq:50,prime:0},{phon:"^gri",freq:264,prime:0},{phon:"^lat",freq:50,prime:0},{phon:"^part",freq:57,prime:0},{phon:"^pil",freq:108,prime:0},{phon:"ark",freq:50,prime:0},{phon:"ar",freq:4406,prime:0},{phon:"art",freq:274,prime:0},{phon:"art^st",freq:112,prime:0},{phon:"^slip",freq:29,prime:0},{phon:"bar",freq:125,prime:0},{phon:"bark",freq:125,prime:0},{phon:"bi",freq:6382,prime:0},{phon:"bit",freq:87,prime:0},{phon:"bist",freq:50,prime:0},{phon:"blak",freq:118,prime:0},{phon:"bl^d",freq:122,prime:0},{phon:"blu",freq:143,prime:0},{phon:"bab",freq:45,prime:0},{phon:"babi",freq:23,prime:0},{phon:"badi",freq:341,prime:0},{phon:"bust",freq:23,prime:0},{phon:"but",freq:34,prime:0},{phon:"bat^l",freq:95,prime:0},{phon:"baks",freq:87,prime:0},{phon:"brid",freq:25,prime:0},{phon:"brud",freq:26,prime:0},{phon:"br^S",freq:77,prime:0},{phon:"b^b^l",freq:32,prime:0},{phon:"b^k",freq:31,prime:0},{phon:"b^s",freq:34,prime:0},{phon:"b^t",freq:4382,prime:0},{phon:"kar",freq:386,prime:0},{phon:"kard",freq:62,prime:0},{phon:"karp^t",freq:22,prime:0},{phon:"sis",freq:34,prime:0},{phon:"klak",freq:30,prime:0},{phon:"kl^b",freq:171,prime:0},{phon:"klu",freq:25,prime:0},{phon:"kalig",freq:32,prime:0},{phon:"kul",freq:149,prime:0},{phon:"kap",freq:32,prime:0},{phon:"kapi",freq:61,prime:0},{phon:"k^p^l",freq:164,prime:0},{phon:"krip",freq:23,prime:0},{phon:"kru",freq:38,prime:0},{phon:"krap",freq:44,prime:0},{phon:"kruS^l",freq:31,prime:0},{phon:"kru^l",freq:20,prime:0},{phon:"kr^S",freq:23,prime:0},{phon:"k^p",freq:63,prime:0},{phon:"k^t",freq:223,prime:0},{phon:"dark",freq:234,prime:0},{phon:"dart",freq:20,prime:0},{phon:"dil",freq:157,prime:0},{phon:"did",freq:21,prime:0},{phon:"dip",freq:199,prime:0},{phon:"du",freq:1366,prime:0},{phon:"dal",freq:23,prime:0},{phon:"dat",freq:28,prime:0},{phon:"d^b^l",freq:83,prime:0},{phon:"dru",freq:69,prime:0},{phon:"drap",freq:196,prime:0},{phon:"dr^g",freq:58,prime:0},{phon:"d^k",freq:21,prime:0},{phon:"d^l",freq:36,prime:0},{phon:"d^st",freq:78,prime:0},{phon:"duti",freq:95,prime:0},{phon:"ist",freq:183,prime:0},{phon:"it",freq:300,prime:0},{phon:"glu",freq:28,prime:0},{phon:"gad",freq:332,prime:0},{phon:"gat",freq:482,prime:0},{phon:"grik",freq:66,prime:0},{phon:"grit",freq:38,prime:0},{phon:"gru",freq:64,prime:0},{phon:"grup",freq:545,prime:0},{phon:"gard",freq:82,prime:0},{phon:"g^tar",freq:24,prime:0},{phon:"kip",freq:348,prime:0},{phon:"ki",freq:125,prime:0},{phon:"lid",freq:517,prime:0},{phon:"lig",freq:83,prime:0},{phon:"lip",freq:38,prime:0},{phon:"list",freq:343,prime:0},{phon:"lig^l",freq:77,prime:0},{phon:"labi",freq:22,prime:0},{phon:"lak",freq:109,prime:0},{phon:"lup",freq:23,prime:0},{phon:"lus",freq:68,prime:0},{phon:"lat",freq:169,prime:0},{phon:"l^k",freq:49,prime:0},{phon:"l^ki",freq:25,prime:0},{phon:"l^kS^ri",freq:24,prime:0},{phon:"ad",freq:53,prime:0},{phon:"pap^",freq:40,prime:0},{phon:"park",freq:242,prime:0},{phon:"part",freq:625,prime:0},{phon:"parS^l",freq:25,prime:0},{phon:"partli",freq:49,prime:0},{phon:"parti",freq:275,prime:0},{phon:"par",freq:10,prime:0},{phon:"pi",freq:24,prime:0},{phon:"pik",freq:24,prime:0},{phon:"pip^l",freq:887,prime:0},{phon:"pis",freq:221,prime:0},{phon:"plat",freq:57,prime:0},{phon:"pl^g",freq:28,prime:0},{phon:"pl^s",freq:72,prime:0},{phon:"pak^t",freq:64,prime:0},{phon:"p^lis",freq:159,prime:0},{phon:"pal^si",freq:290,prime:0},{phon:"pul",freq:129,prime:0},{phon:"pap",freq:31,prime:0},{phon:"pas^b^l",freq:373,prime:0},{phon:"pas^bli",freq:61,prime:0},{phon:"pat",freq:37,prime:0},{phon:"prist",freq:33,prime:0},{phon:"prab^b^l",freq:24,prime:0},{phon:"prab^bli",freq:261,prime:0},{phon:"pradus",freq:256,prime:0},{phon:"prad^kt",freq:195,prime:0},{phon:"pragr^s",freq:141,prime:0},{phon:"p^t",freq:63,prime:0},{phon:"rid",freq:273,prime:0},{phon:"ril",freq:261,prime:0},{phon:"rili",freq:275,prime:0},{phon:"rab",freq:40,prime:0},{phon:"rak",freq:121,prime:0},{phon:"rak^t",freq:20,prime:0},{phon:"rad",freq:29,prime:0},{phon:"rut",freq:69,prime:0},{phon:"r^b",freq:35,prime:0},{phon:"r^g^d",freq:20,prime:0},{phon:"rul",freq:215,prime:0},{phon:"rupi",freq:20,prime:0},{phon:"r^S",freq:60,prime:0},{phon:"r^s^l",freq:21,prime:0},{phon:"skar",freq:22,prime:0},{phon:"skul",freq:694,prime:0},{phon:"skru",freq:45,prime:0},{phon:"sil",freq:40,prime:0},{phon:"sit",freq:99,prime:0},{phon:"sikr^t",freq:105,prime:0},{phon:"si",freq:809,prime:0},{phon:"sid",freq:84,prime:0},{phon:"sik",freq:128,prime:0},{phon:"Sarp",freq:115,prime:0},{phon:"Si",freq:2860,prime:0},{phon:"Sip",freq:23,prime:0},{phon:"Sit",freq:77,prime:0},{phon:"Sild",freq:21,prime:0},{phon:"Sak",freq:66,prime:0},{phon:"Sut",freq:81,prime:0},{phon:"Sap",freq:108,prime:0},{phon:"Sat",freq:142,prime:0},{phon:"Sr^g",freq:22,prime:0},{phon:"S^t",freq:50,prime:0},{phon:"slip",freq:109,prime:0},{phon:"slit",freq:10,prime:0},{phon:"sl^g",freq:24,prime:0},{phon:"sal^d",freq:90,prime:0},{phon:"sari",freq:49,prime:0},{phon:"spark",freq:20,prime:0},{phon:"spik",freq:259,prime:0},{phon:"spid",freq:104,prime:0},{phon:"spat",freq:110,prime:0},{phon:"star",freq:58,prime:0},{phon:"start",freq:450,prime:0},{phon:"start^l",freq:22,prime:0},{phon:"stil",freq:51,prime:0},{phon:"stip",freq:22,prime:0},{phon:"stak",freq:165,prime:0},{phon:"stap",freq:273,prime:0},{phon:"strik",freq:20,prime:0},{phon:"strit",freq:307,prime:0},{phon:"str^k",freq:59,prime:0},{phon:"str^g^l",freq:93,prime:0},{phon:"st^did",freq:79,prime:0},{phon:"st^di",freq:391,prime:0},{phon:"stup^d",freq:25,prime:0},{phon:"s^bst^tut",freq:46,prime:0},{phon:"s^t^l",freq:26,prime:0},{phon:"s^ksid",freq:62,prime:0},{phon:"s^k",freq:20,prime:0},{phon:"su",freq:39,prime:0},{phon:"sut",freq:73,prime:0},{phon:"sut^b^l",freq:37,prime:0},{phon:"tar",freq:20,prime:0},{phon:"targ^t",freq:67,prime:0},{phon:"ti",freq:29,prime:0},{phon:"tu",freq:26162,prime:0},{phon:"tul",freq:79,prime:0},{phon:"tap",freq:212,prime:0},{phon:"trit",freq:127,prime:0},{phon:"triti",freq:24,prime:0},{phon:"tri",freq:161,prime:0},{phon:"trup",freq:82,prime:0},{phon:"trat",freq:20,prime:0},{phon:"tr^b^l",freq:189,prime:0},{phon:"tr^k",freq:84,prime:0},{phon:"tru",freq:237,prime:0},{phon:"truli",freq:237,prime:0},{phon:"tr^st",freq:76,prime:0},{phon:"tr^sti",freq:35,prime:0},{phon:"tub",freq:55,prime:0},{phon:"^gli",freq:30,prime:0},{phon:"^p",freq:1903,prime:0},{phon:"^s",freq:672,prime:0},{phon:"-",freq:1e3,prime:0}],freqNode:{RDL_rest_s:0,RDL_rest_c:1,RDL_wt_s:0,RDL_wt_c:1,RDL_post_c:0},primeNode:{RDL_rest_s:0,RDL_rest_c:1,RDL_wt_s:0,RDL_wt_c:1,RDL_post_c:0},continuumSpec:"",allophoneRelations:[]}),It=s=>{const e=be.parse(s);return(e.lexicon&&e.lexicon.lexeme||[]).map(i=>({phon:i.phonology,freq:+i.frequency||0,label:i.label,prime:+i.prime||0}))},ye=s=>s.trim().split(" ").map(e=>Number(e)||0),Ot=s=>{const e=be.parse(s);return(e.phonemes&&e.phonemes.phoneme||[]).map(i=>({label:i.symbol,features:ye(i.features),durationScalar:ye(i.durationScalar),phonologicalRole:y.NORMAL}))},et=Q(Se({label:ae(),features:Q(Y()),durationScalar:Q(Y()),phonologicalRole:Ce([Z(y.NORMAL),Z(y.AMBIG),Z(y.ALLOPHONE),Z(y.OTHER)])})),Nt=s=>{const e=[];if(et(s,{errors:e}))return s;throw Object.assign(new Error(JSON.stringify(e)),{errors:e})},tt=Q(Se({phon:ae(),freq:Y(),label:Fe(ae()),prime:Y()})),wt=s=>{const e=[];if(tt(s,{errors:e}))return s;throw Object.assign(new Error(JSON.stringify(e)),{errors:e})},B=(s,e)=>s.RDL_rest_s?s.RDL_rest_s*Math.log10(s.RDL_rest_c*e):0,it=(s,e,r)=>s.RDL_post_c?r*Math.log10(s.RDL_post_c+e):0,ot=s=>s.reduce((e,r)=>e+r)/s.length,O=(s,e)=>Array.from(Array(s),r=>Array(e).fill(0)),fe=(s,e,r)=>Array.from(Array(s),i=>Array.from(Array(e),t=>Array(r).fill(0))),ee=s=>s.map(e=>[...e]),rt=(s,e,r)=>Math.min(Math.max(s,e),r),te=(s,e)=>{let r=0,i=0;for(;r===0;)r=Math.random();for(;i===0;)i=Math.random();return Math.sqrt(-2*Math.log(r))*Math.cos(2*Math.PI*i)*e+s};class ie{constructor(e){this.ambiguousPhonemes=[],this.phonemes=e.map(r=>Object.assign({},r)),this.sortPhonemes()}sortPhonemes(){this.phonemes.sort((e,r)=>e.label.localeCompare(r.label));for(const[e,r]of this.phonemes.entries())r.index=e;this.ambiguousPhonemes.sort((e,r)=>e.label.localeCompare(r.label));for(const[e,r]of this.ambiguousPhonemes.entries())r.index=e}sorted(){return this.phonemes}byIndex(e){return this.phonemes[e]}byLabel(e){return this.phonemes.find(r=>r.label==e)||this.ambiguousPhonemes.find(r=>r.label==e)}spreadPhons(e,r,i,t){if(e.length!=r.length)throw new Error("spread and scale parameters have different scale");i=Math.max(i,0);let o=0;const n=p=>{for(const l of p){l.spreadOffset=0;for(let c=0;c<e.length;c++){const d=e[c]*r[c]*l.durationScalar[0];d>l.spreadOffset&&(l.spreadOffset=Math.ceil(d)),o=Math.max(Math.ceil(d),o)}}};n(this.phonemes),n(this.ambiguousPhonemes);const f=p=>{for(const l of p){l.spread=O(L*P,o*4),l.norm=0;for(let c=0;c<L*P;c++)if(l.features[c]>0){const d=Math.floor(c/L),S=(l.features[c]*t-l.features[c]*i)/(e[d]*l.durationScalar[0]),g=Math.floor(e[d]*l.durationScalar[0]);for(let A=0;A<g;A++)l.spread[c][l.spreadOffset+A]=l.features[c]*t-S*A,l.spread[c][l.spreadOffset-A]=l.spread[c][l.spreadOffset+A],l.norm+=2*Math.pow(l.spread[c][l.spreadOffset+A],2)}}};f(this.phonemes),f(this.ambiguousPhonemes)}makePhonemeContinuum(e,r,i){const t=this.byLabel(e),o=this.byLabel(r);if(!t||!o||i<=1||i>ie.MAX_STEPS)throw new Error("invalid arguments to makePhonemeContinuum");const n=[];for(let l=0;l<L*P;l++)n[l]=(o.features[l]-t.features[l])/(i-1);const f=[];for(let l=0;l<P;l++)f[l]=(o.durationScalar[l]-t.durationScalar[l])/(i-1);this.ambiguousPhonemes=[];for(let l=0;l<i;l++){const c=[];for(let S=0;S<L*P;S++)c[S]=t.features[S]+l*n[S];const d=[];for(let S=0;S<P;S++)d[S]=t.durationScalar[S]+l*f[S];this.ambiguousPhonemes.push({label:l.toString(),features:c,durationScalar:d,phonologicalRole:y.AMBIG})}const p=Math.floor(this.ambiguousPhonemes.length/2);this.ambiguousPhonemes.push({label:"?",features:[...this.ambiguousPhonemes[p].features],durationScalar:[...this.ambiguousPhonemes[p].durationScalar],phonologicalRole:y.AMBIG}),this.sortPhonemes()}}ie.MAX_STEPS=9;class st{constructor(e=pe()){this.globalFeatureCompetitionIndex=0,this.globalLexicalCompetitionIndex=0,this.globalPhonemeCompetitionIndex=0,this.globalPhonToWordSum=0,this.globalWordToPhonSum=0,this.globalFeatToPhonSum=0,this.globalPhonToFeatSum=0,this.globalFeatSumAll=0,this.globalFeatSumPos=0,this.globalPhonSumAll=0,this.globalPhonSumPos=0,this.globalWordSumAll=0,this.globalWordSumPos=0,this.inputSlice=0,this.__nreps=1,this.config=e,this.phonemes=new ie(this.config.phonology),this.reset()}reset(){this.lengthNormalizationScale=1/ot(this.config.lexicon.map(i=>i.phon.length)),this.inputSlice=0,this.inputLayer=O(P*L,this.config.fSlices),this.featLayer=O(P*L,this.config.fSlices),this.featNet=O(P*L,this.config.fSlices),this.phonLayer=O(this.config.phonology.length,this.getPSlices()),this.phonNet=O(this.config.phonology.length,this.getPSlices()),this.wordLayer=O(this.config.lexicon.length,this.getPSlices()),this.wordNet=O(this.config.lexicon.length,this.getPSlices()),this.pww=O(this.config.phonology.length,4),this.wpw=O(this.config.phonology.length,4),this.fpw=fe(this.config.phonology.length,P,0),this.pfw=fe(this.config.phonology.length,P,0);for(let i=0;i<this.config.phonology.length;i++)for(let t=0;t<P;t++)this.fpw[i][t]=Array(this.config.spread[t]*2).fill(0),this.pfw[i][t]=Array(this.config.spread[t]*2).fill(0);if(this.config.continuumSpec&&this.config.continuumSpec.trim().length==3){const i=+this.config.continuumSpec.trim()[2];i>1&&i<10&&this.phonemes.makePhonemeContinuum(this.config.continuumSpec.trim()[0],this.config.continuumSpec.trim()[1],i)}this.phonemes.spreadPhons(this.config.spread,this.config.spreadScale,this.config.min,this.config.max);let e=this.clamp(this.config.rest.F||0);for(let i=0;i<this.config.fSlices;i++)for(let t=0;t<P*L;t++)this.featLayer[t][i]=e;e=this.clamp(this.config.rest.P||0);for(let i=0;i<this.getPSlices();i++)for(let t=0;t<this.config.phonology.length;t++)this.phonLayer[t][i]=e;e=this.clamp(this.config.rest.W||0);for(let i=0;i<this.getWSlices();i++)for(let t=0;t<this.config.lexicon.length;t++)this.wordLayer[t][i]=e;if(this.config.freqNode.RDL_rest_s)for(let i=0;i<this.getWSlices();i++)for(let t=0;t<this.config.lexicon.length;t++)this.wordLayer[t][i]+=B(this.config.freqNode,this.config.lexicon[t].freq);if(this.config.primeNode.RDL_rest_s)for(let i=0;i<this.getWSlices();i++)for(let t=0;t<this.config.lexicon.length;t++)this.config.lexicon[t].prime>0&&(this.wordLayer[t][i]+=B(this.config.primeNode,this.config.lexicon[t].prime));const r=4;this.__nreps=this.config.nreps,this.__nreps<=0&&(this.__nreps=1);for(let i=0;i<this.config.phonology.length;i++){let t=0;for(let o=0;o<=4;o++){const n=(r-Math.abs(2-o))/r;t+=n*n}for(let o=0;o<4;o++){const n=(r-Math.abs(2-o))/r;this.pww[i][o]=n/t,this.wpw[i][o]=1*n/t}}for(let i=0;i<this.config.phonology.length;i++)for(let t=0;t<P;t++){let o=0;const n=this.config.spread[t]*1,f=Math.floor(n);for(let p=0;p<2*f;p++){const l=(n-Math.abs(f-p))/n;o+=l*l}for(let p=0;p<2*f;p++)this.pfw[i][t][p]=(n-Math.abs(f-p))/n,this.fpw[i][t][p]=this.pfw[i][t][p]/o}this.createInput()}getPSlices(){return Math.floor(this.config.fSlices/this.config.slicesPerPhon)}getWSlices(){return this.getPSlices()}clamp(e){return rt(e,this.config.min,this.config.max)}createInput(){const e=this.config.modelInput.trim();let r=this.config.deltaInput;for(let i=0;i<e.length&&r<this.config.fSlices;i++)if(e[i]=="{"){const t=this.phonemes.byLabel(e[++i]),o=+e[++i],n=this.phonemes.byLabel(e[++i]);if(i+=1,!t||!n||!t.spread||!t.spreadOffset||!n.spread||!n.spreadOffset)throw new he;const f=r-t.spreadOffset;for(let p=f,l=0;p<f+o;p++,l++)for(let c=0;c<L*P;c++)p>=0&&p<this.config.fSlices&&(this.inputLayer[c][p]+=t.spread[c][l]);for(let p=f+o,l=o;p<f+n.spreadOffset*2;p++,l++)for(let c=0;c<L*P;c++)p>=0&&p<this.config.fSlices&&(this.inputLayer[c][p]+=n.spread[c][l]);r+=this.config.deltaInput}else{const t=this.phonemes.byLabel(e[i]);if(!t||!t.spread||!t.spreadOffset)throw new he;const o=r-Math.round(t.spreadOffset);for(let n=o,f=0;n<o+Math.round(t.spreadOffset*2);n++,f++)for(let p=0;p<L*P;p++)n>=0&&n<this.config.fSlices&&(this.inputLayer[p][n]+=t.spread[p][f]);r+=Math.round(this.config.deltaInput*t.durationScalar[0])}if(this.config.noiseSD!=0)for(let i=0;i<L*P;i++)for(let t=0;t<this.config.fSlices;t++)this.inputLayer[i][t]+=te(0,this.config.noiseSD);for(let i=0;i<L*P;i++)for(let t=0;t<this.config.fSlices;t++)this.inputLayer[i][t]=this.clamp(this.inputLayer[i][t]);for(let i=0;i<P;i++)for(let t=0;t<L;t++)this.featNet[i*L+t][0]+=this.inputLayer[i*L+t][0];this.featUpdate()}actFeatures(){this.globalFeatureCompetitionIndex=0;const e=O(P,this.config.fSlices);for(let i=0;i<P;i++)for(let t=0;t<L;t++)for(let o=0;o<this.config.fSlices;o++)this.featLayer[i*L+t][o]>0&&(e[i][o]+=this.featLayer[i*L+t][o]);const r=e.map(i=>i.map(t=>t*(this.config.gamma.F||0)));if(this.inputSlice<this.config.fSlices)for(let i=0;i<P*L;i++)for(let t=this.inputSlice+1;t<this.config.fSlices&&t<this.inputSlice+1+this.__nreps;t++){const o=this.clamp((this.config.alpha.IF||0)*this.inputLayer[i][t]);this.featNet[i][t]+=o,this.globalFeatureCompetitionIndex-=o}for(let i=0;i<P;i++)for(let t=0;t<L;t++)for(let o=0;o<this.config.fSlices;o++){const n=Math.max(0,r[i][o]-Math.max(0,this.featLayer[i*L+t][o]*(this.config.gamma.F||0)));this.featNet[i*L+t][o]-=n,this.globalFeatureCompetitionIndex+=n}}featToPhon(){const e=this.config.slicesPerPhon,r=this.getPSlices();this.globalFeatToPhonSum=0;for(let i=0;i<P*L;i++)for(let t=0;t<this.config.fSlices;t++)if(this.featLayer[i][t]>0)for(const[o,n]of this.phonemes.sorted().entries()){if(n.features[i]==0)continue;const f=this.config.spread[Math.floor(i/L)],p=this.config.fSlices-f;let l,c;t<f?(l=0,c=Math.floor((t+f-1)/e)):(t>p?c=r-1:c=Math.floor((t+f-1)/e),l=Math.floor((t-f)/e+1));let d=f-(t-e*l),S=0;this.featLayer[i][t]>0&&(S=n.features[i]*this.featLayer[i][t]*(this.config.alpha.FP||0));const g=Math.floor(i/L);for(let A=l;A<c+1&&A<r;A++){const b=this.fpw[o][g][d]*S;this.phonNet[o][A]+=b,this.globalFeatToPhonSum+=b,d+=e}}}phonToPhon(){const e=this.getPSlices();let r=Array(e).fill(0),i=0,t=0,o=1;for(let n=0;n<e;n++)for(let f=0;f<this.config.phonology.length;f++)if(this.phonLayer[f][n]>0){i=n+o,i>=e?(i=e-1,t=n-o):(t=n-o,t<0&&(t=0));for(let p=t;p<i;p++)r[p]+=this.phonLayer[f][n]*(this.config.gamma.P||0)}this.globalPhonemeCompetitionIndex=0;for(let n=0;n<this.config.phonology.length;n++)for(let f=0;f<e;f++){i=f+o,i>=e?(i=e-1,t=f-o):(t=f-o,t<0&&(t=0));for(let p=t;p<i;p++)r[p]>0&&(this.phonNet[n][f]-=r[p],this.globalPhonemeCompetitionIndex+=r[p]);if(this.phonLayer[n][f]*(this.config.gamma.P||0)>0&&r[f]>0){const p=(i-t)*this.phonLayer[n][f]*(this.config.gamma.P||0);this.phonNet[n][f]+=p,this.globalPhonemeCompetitionIndex-=p}for(let p=0;p<this.config.phonology.length;p++);}}phonToFeat(){var e;const r=this.config.fSlices,i=this.config.slicesPerPhon;this.globalPhonToFeatSum=0;for(let t=0;t<r;t++)for(let o=0;o<P;o++)for(let n=0;n<L;n++){let f=0;for(let l=0;l<this.config.phonology.length;l++)for(let c=0;c<this.getPSlices();c++){let d=Math.floor(Math.abs(c*i-t));d>=r&&(d=r-1),this.phonLayer[l][c]>0&&(f+=this.pfw[l][o][d]*this.phonLayer[l][c]*(((e=this.phonemes.byIndex(l))===null||e===void 0?void 0:e.features[o*L+n])||0))}const p=(this.config.alpha.PF||0)*f;this.featNet[o*L+n][t]+=p,this.globalPhonToFeatSum+=p}}wordToPhon(){let e=this.config.lexicon,r,i,t,o,n;const f=this.getPSlices();this.globalWordToPhonSum=0;for(let p=0;p<e.length;p++)for(let l=0;l<this.getWSlices();l++)if(!(this.wordLayer[p][l]<=0)){r=e[p].phon;for(let c=0;c<r.length;c++){let d=this.phonemes.byLabel(r[c]);if(i=l+c*2,t=i-1,t>=f)break;t<0?(o=1-t,t=0,n=i+2):(n=i+2,n>f-1&&(n=f-1),o=1);for(let S=t;S<n&&S<f&&o<4;S++,o++)if(this.wordLayer[p][l]>0){let g=0;e[p].freq&&this.config.freqNode.RDL_wt_s&&(g=this.config.freqNode.RDL_wt_s*Math.log10(e[p].freq));let A=0;e[p].prime&&this.config.primeNode.RDL_wt_s&&(A=this.config.primeNode.RDL_wt_s*Math.log10(e[p].prime));const b=(1+g+A)*this.wordLayer[p][l]*(this.config.alpha.WP||0)*this.wpw[d.index][o];this.phonNet[d.index][S]+=b,this.globalWordToPhonSum+=b}}}}phonToWord(){const e=this.config.lexicon,r=this.getPSlices();let i,t,o,n,f,p;this.globalPhonToWordSum=0;for(let l=0;l<this.config.phonology.length;l++){f=2,(this.config.deltaInput!=6||this.config.slicesPerPhon!=3)&&(f=Math.floor(this.config.deltaInput/this.config.slicesPerPhon));for(let c=0;c<r;c++){if(this.phonLayer[l][c]<=0)continue;e:for(let d=0;d<e.length;d++){const S=e[d].phon;p=S.length;for(let g=0;g<p;g++)if(S.charAt(g)==this.phonemes.byIndex(l).label.charAt(0)){if(i=c-f*g,i<-f)continue e;t=1+i-f,t<0?(o=1-t,t=0,n=i+f):(n=i+f,n>r-1&&(n=r-1),o=1);let A=2*this.phonLayer[l][c]*(this.config.alpha.PW||0),b=0;this.config.freqNode.RDL_wt_s&&e[d].freq&&(b=this.config.freqNode.RDL_wt_s*Math.log10(e[d].freq));let D=0;this.config.primeNode.RDL_wt_s&&e[d].prime&&(D=this.config.primeNode.RDL_wt_s*Math.log10(e[d].prime));for(let _=t;_<n&&_<this.getWSlices();_++,o++)if(o>=0&&o<4){const N=(1+b+D)*this.pww[l][o]*A;this.wordNet[d][_]+=N,this.globalPhonToWordSum+=N}}}}}}wordToWord(){const e=this.getPSlices(),r=Array(e).fill(0),i=Array(e).fill(0),t=this.config.lexicon;for(let o=0;o<e;o++)for(let n=0;n<t.length;n++){let f=o;f<0&&(f=0);let p=o+t[n].phon.length*2;//!! wstart + (wlength*phone width) + (1/2 phone width)
p>e&&(p=e-1);for(let l=f;l<p;l++)this.wordLayer[n][o]>0&&(i[l]+=this.wordLayer[n][o]*this.wordLayer[n][o])}for(let o=0;o<e;o++)i[o]>3&&(i[o]=3),r[o]=i[o]*(this.config.gamma.W||0);this.globalLexicalCompetitionIndex=0;for(let o=0;o<e;o++)for(let n=0;n<t.length;n++){let f=o;f<0&&(f=0);let p=o+t[n].phon.length*2;//!! wstart + (wlength*phone width) + (1/2 phone width)
p>e&&(p=e-1);for(let l=f;l<p;l++)if(this.config.lengthNormalization){let c=1/(t[n].phon.length*this.lengthNormalizationScale);c>1&&(c=1);const d=r[l]*c;this.wordNet[n][o]-=d,this.globalLexicalCompetitionIndex+=d}else this.wordNet[n][o]-=r[l],this.globalLexicalCompetitionIndex+=r[l];if(this.wordLayer[n][o]>0)if(this.config.lengthNormalization){let l=1/(t[n].phon.length*this.lengthNormalizationScale);l>1&&(l=1);const c=(p-f)*(this.wordLayer[n][o]*this.wordLayer[n][o]*(this.config.gamma.W||0))*l;this.wordNet[n][o]+=c,this.globalLexicalCompetitionIndex-=c}else{const l=(p-f)*(this.wordLayer[n][o]*this.wordLayer[n][o]*(this.config.gamma.W||0));this.wordNet[n][o]+=l,this.globalLexicalCompetitionIndex-=l}}}featUpdate(){const{min:e,max:r}=this.config;this.globalFeatSumAll=0,this.globalFeatSumPos=0;for(let i=0;i<this.config.fSlices;i++)for(let t=0;t<L*P;t++){this.config.stochasticitySD&&(this.featNet[t][i]+=te(0,this.config.stochasticitySD));let o=this.featLayer[t][i];this.featNet[t][i]>0?o+=(r-o)*this.featNet[t][i]:this.featNet[t][i]<0&&(o+=(o-e)*this.featNet[t][i]);let n=this.featLayer[t][i]-(this.config.rest.F||0);o-=(this.config.decay.F||0)*n,o>r&&(o=r),o<e&&(o=e),this.featLayer[t][i]=o,this.globalFeatSumAll+=o,o>0&&(this.globalFeatSumPos+=o)}this.featNet=O(L*P,this.config.fSlices)}phonUpdate(){const e=this.getPSlices();this.globalPhonSumAll=0,this.globalPhonSumPos=0;for(let r=0;r<e;r++)for(let i=0;i<this.config.phonology.length;i++){this.config.stochasticitySD&&(this.phonNet[i][r]+=te(0,this.config.stochasticitySD));let t;this.phonNet[i][r]>=0?t=this.config.max-this.phonLayer[i][r]:t=this.phonLayer[i][r]-this.config.min;const o=this.phonLayer[i][r]-(this.config.rest.P||0);this.phonLayer[i][r]+=t*this.phonNet[i][r]-(this.config.decay.P||0)*o,this.phonLayer[i][r]=this.clamp(this.phonLayer[i][r]),this.globalPhonSumAll+=this.phonLayer[i][r],this.phonLayer[i][r]>0&&(this.globalPhonSumPos+=this.phonLayer[i][r])}this.phonNet=O(this.config.phonology.length,e)}wordUpdate(){const e=this.getWSlices(),{min:r,max:i}=this.config;this.globalWordSumAll=0,this.globalWordSumPos=0;for(let t=0;t<this.config.lexicon.length;t++)for(let o=0;o<e;o++){this.wordNet[t][o]*=this.config.atten,this.wordNet[t][o]-=this.config.bias,this.config.stochasticitySD&&(this.wordNet[t][o]+=te(0,this.config.stochasticitySD));let n=this.wordLayer[t][o];this.wordNet[t][o]>0?n+=(i-n)*this.wordNet[t][o]:this.wordNet[t][o]<0&&(n+=(n-r)*this.wordNet[t][o]);let f;this.config.freqNode.RDL_rest_s&&this.config.lexicon[t].freq>0&&this.config.primeNode.RDL_rest_s&&this.config.lexicon[t].prime>0?f=this.wordLayer[t][o]-((this.config.rest.W||0)+B(this.config.freqNode,this.config.lexicon[t].freq))+((this.config.rest.W||0)+B(this.config.primeNode,this.config.lexicon[t].prime)):this.config.freqNode.RDL_rest_s&&this.config.lexicon[t].freq>0?f=this.wordLayer[t][o]-((this.config.rest.W||0)+B(this.config.freqNode,this.config.lexicon[t].freq)):this.config.primeNode.RDL_rest_s&&this.config.lexicon[t].prime>0?f=this.wordLayer[t][o]-((this.config.rest.W||0)+B(this.config.primeNode,this.config.lexicon[t].prime)):f=this.wordLayer[t][o]-(this.config.rest.W||0),n-=(this.config.decay.W||0)*f,n>i&&(n=i),n<r&&(n=r),this.wordLayer[t][o]=n,this.globalWordSumAll+=n,n>0&&(this.globalWordSumPos+=n)}this.wordNet=O(this.config.lexicon.length,e)}cycle(){this.actFeatures();const e=this.config.nreps<0?Math.abs(this.config.nreps):1;for(let r=0;r<e;r++)this.featToPhon(),this.phonToPhon(),this.phonToWord(),this.wordToPhon(),this.wordToWord(),this.featUpdate(),this.phonUpdate(),this.wordUpdate();this.inputSlice+=this.__nreps}}class nt{constructor(e=pe()){this.config=e,this.inputLayer=[],this.featLayer=[],this.phonLayer=[],this.wordLayer=[],this.globalFeatureCompetition=[],this.globalLexicalCompetition=[],this.globalPhonemeCompetition=[],this.globalPhonToWordSum=[],this.globalWordToPhonSum=[],this.globalFeatToPhonSum=[],this.globalPhonToFeatSum=[],this.globalFeatSumAll=[],this.globalFeatSumPos=[],this.globalPhonSumAll=[],this.globalPhonSumPos=[],this.globalWordSumAll=[],this.globalWordSumPos=[],this.tn=new st(this.config),this.phonemes=this.tn.phonemes,this.maxDuration=Math.max(6*this.config.modelInput.length*this.config.deltaInput,this.config.fSlices)}getStepsRun(){return this.inputLayer.length}cycle(e){e=Math.min(this.maxDuration,e);for(let r=0;r<e;r++)this.inputLayer.push(ee(this.tn.inputLayer)),this.featLayer.push(ee(this.tn.featLayer)),this.phonLayer.push(ee(this.tn.phonLayer)),this.wordLayer.push(ee(this.tn.wordLayer)),this.globalFeatureCompetition.push(this.tn.globalFeatureCompetitionIndex),this.globalLexicalCompetition.push(this.tn.globalLexicalCompetitionIndex),this.globalPhonemeCompetition.push(this.tn.globalPhonemeCompetitionIndex),this.globalPhonToWordSum.push(this.tn.globalPhonToWordSum),this.globalWordToPhonSum.push(this.tn.globalWordToPhonSum),this.globalFeatToPhonSum.push(this.tn.globalFeatToPhonSum),this.globalPhonToFeatSum.push(this.tn.globalPhonToFeatSum),this.globalFeatSumAll.push(this.tn.globalFeatSumAll),this.globalFeatSumPos.push(this.tn.globalFeatSumPos),this.globalPhonSumAll.push(this.tn.globalPhonSumAll),this.globalPhonSumPos.push(this.tn.globalPhonSumPos),this.globalWordSumAll.push(this.tn.globalWordSumAll),this.globalWordSumPos.push(this.tn.globalWordSumPos),this.tn.cycle()}getInputData(e){return this.inputLayer[e].map((r,i)=>[i,...r.map(t=>t.toFixed(4))])}getFeatureData(e){return this.featLayer[e].map((r,i)=>[i,...r.map(t=>t.toFixed(4))])}getPhonemeData(e){return this.phonLayer[e].map((r,i)=>{var t;return[this.phonemes&&((t=this.phonemes.byIndex(i))===null||t===void 0?void 0:t.label)||"?",...r.map(o=>o.toFixed(4))]})}getWordData(e){return this.wordLayer[e].map((r,i)=>[this.config.lexicon[i].phon,...r.map(t=>t.toFixed(4))])}getLevelsAndFlowData(e){return[[this.globalFeatSumAll[e],this.globalFeatSumPos[e],this.globalFeatureCompetition[e],this.globalPhonSumAll[e],this.globalPhonSumPos[e],this.globalPhonemeCompetition[e],this.globalWordSumAll[e],this.globalWordSumPos[e],this.globalLexicalCompetition[e],this.globalFeatToPhonSum[e],this.globalPhonToFeatSum[e],this.globalPhonToWordSum[e],this.globalWordToPhonSum[e]]]}getAllInputData(){return Array.from({length:this.inputLayer.length},(e,r)=>this.getInputData(r))}getAllFeatureData(){return Array.from({length:this.featLayer.length},(e,r)=>this.getFeatureData(r))}getAllPhonemeData(){return Array.from({length:this.phonLayer.length},(e,r)=>this.getPhonemeData(r))}getAllWordData(){return Array.from({length:this.wordLayer.length},(e,r)=>this.getWordData(r))}getAllLevelsAndFlowData(){return Array.from({length:this.globalLexicalCompetition.length},(e,r)=>this.getLevelsAndFlowData(r))}serializeInputData(e=[]){const r=[this.config.modelInput,...e];return U(this.getAllInputData(),r)}serializeFeatureData(e=[]){const r=[this.config.modelInput,...e];return U(this.getAllFeatureData(),r)}serializePhonemeData(e=[]){const r=[this.config.modelInput,...e];return U(this.getAllPhonemeData(),r)}serializeWordData(e=[]){const r=[this.config.modelInput,...e];return U(this.getAllWordData(),r)}serializeLevelsAndFlowData(e=[]){const r=[this.config.modelInput,...e];return U(this.getAllLevelsAndFlowData(),r)}getSimData(){return{input:this.getAllInputData(),feature:this.getAllFeatureData(),phoneme:this.getAllPhonemeData(),word:this.getAllWordData(),levelsAndFlows:this.getAllLevelsAndFlowData()}}}function U(s,e){var r;const i=((r=s[0])===null||r===void 0?void 0:r.length)||0,t=[];for(let o=0;o<i;o++)for(let n=0;n<s.length;n++)t.push([n,...s[n][o]]);return t.map(o=>[o[0],...e,o.slice(1)].join(", ")).join(`
`)+`
`}class at extends nt{writeFiles(){}async appendInputData(){}async appendFeatureData(){}async appendPhonemeData(){}async appendWordData(){}async appendLevelsAndFlowData(){}async appendFiles(){}}var x;(function(s){s[s.PHONEMES=0]="PHONEMES",s[s.WORDS=1]="WORDS"})(x||(x={}));var E;(function(s){s[s.RESPONSE_PROBABILITIES=0]="RESPONSE_PROBABILITIES",s[s.ACTIVATIONS=1]="ACTIVATIONS",s[s.COMPETITION_INDEX=2]="COMPETITION_INDEX"})(E||(E={}));var q;(function(s){s[s.AVERAGE=0]="AVERAGE",s[s.MAX_POSTHOC=1]="MAX_POSTHOC",s[s.STATIC=2]="STATIC",s[s.FRAUENFELDER=3]="FRAUENFELDER",s[s.MAX_ADHOC=4]="MAX_ADHOC",s[s.MAX_ADHOC_2=5]="MAX_ADHOC_2"})(q||(q={}));var X;(function(s){s[s.NORMAL=0]="NORMAL",s[s.FORCED=1]="FORCED"})(X||(X={}));var V;(function(s){s[s.RAW=0]="RAW",s[s.FIRST_DERIVATIVE=1]="FIRST_DERIVATIVE",s[s.SECOND_DERIVATIVE=2]="SECOND_DERIVATIVE"})(V||(V={}));const De=(s,e)=>{const r=[];for(const i of s)for(let t=0;t<e.length;t++)i==e[t]&&r.push(t);return r},oe=(s,e,r)=>{let i=0,t=0;for(let o=e-Math.floor(r/2);o<e+Math.floor(r/2);o++)if(!(o<0)){if(o>=s.length)break;i+=s[o],t++}return i/=t,i},lt=s=>{let e=[];for(let r=1;r<=s+1;r++)e[r-1]=r;return e},ce=(s,e,r)=>{const i=[],t=lt(r);for(let o=0;o<r-1;o++){let n=0,f=0,p;for(let l=Math.floor(-e/2);l<e/2&&l<s.length;l++)if(p=o+l,!(p<0)){if(p>=t.length)break;n+=(t[p]-oe(t,o,e))*(s[p]-oe(s,o,e)),f+=(t[p]-oe(t,o,e))*(t[p]-oe(t,o,e))}i[o]=n/f}return i},ht=s=>{const e=s.domain==x.WORDS?s.sim.config.lexicon.map(t=>t.phon):s.sim.phonemes.sorted().map(t=>t.label),r=s.excludeSilence?e.filter(t=>!/^-+$/.test(t)):e;return Ie(Object.assign(Object.assign({},s),{itemsToWatch:e})).map((t,o)=>[t,r[o]]).sort(([t],[o])=>Math.max(...o.data.map(n=>n.y))-Math.max(...t.data.map(n=>n.y))).slice(0,+s.itemsToWatch).map(([t,o])=>o)},Ie=s=>{const{sim:e,domain:r=x.WORDS,itemsToWatch:i=10,calculationType:t=q.STATIC,alignment:o=4,choice:n=X.NORMAL,kValue:f=4,competType:p=V.RAW,competSlope:l=1}=s;let c;f<0?c=E.COMPETITION_INDEX:f===0?c=E.ACTIVATIONS:c=E.RESPONSE_PROBABILITIES;const d=e.getStepsRun();if(d==0)return[];if(c==E.RESPONSE_PROBABILITIES||c==E.ACTIVATIONS){let S;if(Array.isArray(i)?S=i:S=ht(s),S.length==0)return[];let g,A;r==x.WORDS?(g=De(S,e.config.lexicon.map(h=>h.phon)),A=e.wordLayer):(g=De(S,e.phonemes.sorted().map(h=>h.label)),A=e.phonLayer);let b=A[0].length,D=Math.floor(e.config.fSlices/e.config.slicesPerPhon),_=fe(d,b,D);if(c==E.RESPONSE_PROBABILITIES)for(let h=0;h<d;h++)for(let a=0;a<b;a++)for(let m=0;m<D;m++){const u=A[h][a][m];_[h][a][m]=Math.exp(u*(f||1)),e.config.freqNode.RDL_post_c&&r==x.WORDS&&(_[h][a][m]=it(e.config.freqNode,e.config.lexicon[a].freq,_[h][a][m]))}const N=O(b,d),j=Array(b).fill(0);if(t==q.MAX_ADHOC)for(let h=0;h<b;h++)for(let a=0;a<d;a++){let m=-1e3;for(let u=0;u<D;u++)A[a][h][u]>m&&(m=A[a][h][u],N[h][a]=u)}else if(t==q.MAX_ADHOC_2)for(let h=0;h<b;h++)for(let a=0;a<d;a++){let m=-1e3;for(let u=0;u<D;u++)A[a][h][u]>m&&(m=A[a][h][u],N[h][a]=u)}else if(t==q.MAX_POSTHOC)for(let h=0;h<b;h++){let a=-1e3;for(let m=0;m<d;m++)for(let u=0;u<D;u++)A[m][h][u]>a&&(a=A[m][h][u],j[h]=u)}let v=Array(d).fill(0),R=O(d,b);if(c==E.RESPONSE_PROBABILITIES){for(let h=0;h<d;h++)if(v[h]=0,n==X.NORMAL)switch(t){case q.AVERAGE:for(let a=0;a<D;a++)for(let m=0;m<b;m++)v[h]+=_[h][m][a];break;case q.MAX_ADHOC:for(let a=0;a<b;a++)for(let m=0;m<b;m++)R[h][m]+=_[h][a][N[m][h]];break;case q.MAX_ADHOC_2:for(let a=0;a<b;a++)for(let m=0;m<b;m++)R[h][m]+=_[h][a][N[a][h]];break;case q.MAX_POSTHOC:for(let a=0;a<b;a++)v[h]+=_[h][a][j[a]];break;case q.STATIC:for(let a=0;a<b;a++)v[h]+=_[h][a][o];break;case q.FRAUENFELDER:for(let a=0;a<b;a++)for(let m=0;m<b;m++)for(let u=0;u<D;u++)if(r==x.WORDS){const M=Math.floor(e.config.deltaInput/e.config.slicesPerPhon)*e.config.lexicon[a].phon.length,$=Math.floor(e.config.deltaInput/e.config.slicesPerPhon)*e.config.lexicon[m].phon.length;(o==u||u>o&&o+M>=u||u<o&&u+$>=o)&&(R[h][a]+=_[h][m][u])}else(u==o||u==o-1||u==o+1)&&(R[h][a]+=_[h][a][u]);break}else if(n==X.FORCED)switch(t){case q.AVERAGE:for(let a=0;a<D;a++)for(let m=0;m<g.length;m++)v[h]+=_[h][g[m]][a];break;case q.MAX_ADHOC:for(let a=0;a<g.length;a++)for(let m=0;m<g.length;m++)R[h][g[a]]+=_[h][g[m]][N[g[a]][h]];break;case q.MAX_ADHOC_2:for(let a=0;a<g.length;a++)for(let m=0;m<g.length;m++)R[h][g[a]]+=_[h][g[m]][N[g[a]][h]];break;case q.MAX_POSTHOC:for(let a=0;a<g.length;a++)v[h]+=_[h][g[a]][j[g[a]]];break;case q.STATIC:for(let a=0;a<g.length;a++)v[h]+=_[h][g[a]][o];break;case q.FRAUENFELDER:for(let a=0;a<g.length;a++)for(let m=0;m<g.length;m++)for(let u=0;u<D;u++)if(r==x.WORDS){const M=Math.floor(e.config.deltaInput/e.config.slicesPerPhon)*e.config.lexicon[g[a]].phon.length,$=Math.floor(e.config.deltaInput/e.config.slicesPerPhon)*e.config.lexicon[g[m]].phon.length;(o<=u+$&&o>=u&&$>0&&M>0||u<=o+M&&u>=o&&$>0&&M>0)&&(R[h][g[a]]+=_[h][g[m]][u])}else(u==o||u==o-1||u==o+1)&&(R[h][g[a]]+=_[h][g[m]][u]);break}}let T=O(g.length,d);for(let h=0;h<g.length;h++)for(let a=0;a<d;a++){let m=0,u;switch(c==E.RESPONSE_PROBABILITIES?u=_:u=A,t){case q.AVERAGE:for(let M=0;M<D;M++)m+=u[a][g[h]][M];m/=D;break;case q.MAX_ADHOC:m=u[a][g[h]][N[g[h]][a]];break;case q.MAX_ADHOC_2:m=u[a][g[h]][N[g[h]][a]];break;case q.MAX_POSTHOC:m=u[a][g[h]][j[g[h]]];break;case q.STATIC:m=u[a][g[h]][o];break;case q.FRAUENFELDER:m=u[a][g[h]][o]+u[a][g[h]][o+1];break}if(c==E.RESPONSE_PROBABILITIES)switch(t){case q.AVERAGE:T[h][a]=m/v[a];break;case q.MAX_ADHOC:T[h][a]=m/R[a][g[h]];break;case q.MAX_ADHOC_2:T[h][a]=m/R[a][g[h]];break;case q.MAX_POSTHOC:T[h][a]=m/v[a];break;case q.STATIC:T[h][a]=m/v[a];break;case q.FRAUENFELDER:T[h][a]=m/R[a][g[h]];break}else T[h][a]=m}let W;const me=[];for(let h=0;h<g.length;h++){r==x.WORDS?W={label:e.config.lexicon[g[h]].phon,data:[]}:W={label:e.phonemes.sorted()[g[h]].label,data:[]};for(let a=0;a<d;a++)W.data.push({x:a,y:T[h][a]});switch(t){case q.MAX_ADHOC:case q.MAX_ADHOC_2:W.label+=` [${N[g[h]].join(",")}]`;break;case q.MAX_POSTHOC:W.label+=` [${j[g[h]]}]`;break;case q.STATIC:case q.FRAUENFELDER:W.label+=` [${o}]`;break}me.push(W)}return me}else{let S;const g=[];let A;if(r==x.WORDS?(A=e.globalLexicalCompetition,S={label:"Lexical Competition",data:[]}):(A=e.globalPhonemeCompetition,S={label:"Phoneme Competition",data:[]}),p==V.RAW){for(let b=0;b<d;b++)S.data.push({x:b,y:A[b]});g.push(S)}else if(p==V.FIRST_DERIVATIVE){const b=ce(A,l,d);for(let D=0;D<b.length;D++)S.data.push({x:D,y:b[D]});g.push(S)}else if(p==V.SECOND_DERIVATIVE){const b=ce(A,l,d-1),D=ce(b,l,d-2);for(let _=0;_<D.length;_++)S.data.push({x:_,y:D[_]});g.push(S)}return g}};function pt(s,e=!1){return s.length>0?[["cycle",...s.map(r=>e?r.label.padEnd(18):r.label)],...Array.from(Array(s[0].data.length),(r,i)=>[i,...s.map(t=>{var o;return((o=t.data[i].y)===null||o===void 0?void 0:o.toFixed(18))||NaN})])]:[]}function ft(s,e=!1){return pt(s,e).map(r=>r.join("	")).join(`
`)}const z=s=>s?s.map(e=>e.join("	")).join(`
`):"",ct=["#e6194b","#3cb44b","#ffe119","#4363d8","#f58231","#911eb4","#46f0f0","#f032e6","#bcf60c","#fabebe","#008080","#e6beff","#9a6324","#fffac8","#800000","#aaffc3","#808000","#ffd8b1","#000075","#808080","#000000"];class mt{constructor(){I(this,"config",qe(pe()));I(this,"analysisConfig",qe({domain:x.WORDS,itemsToWatch:10,calculationType:q.STATIC,alignment:4,choice:X.NORMAL,kValue:0,competType:V.RAW,competSlope:4,excludeSilence:!1}));I(this,"sortedPhonemes",w(()=>[...this.config.phonology].sort((e,r)=>e.label.localeCompare(r.label))));I(this,"sim",C(null));I(this,"lastSimConfig",C(JSON.parse(JSON.stringify(this.config))));I(this,"lastSimConfigHash",C(le(this.lastSimConfig.value)));I(this,"isConfigChanged",w(()=>this.lastSimConfigHash.value!==le(this.config)));I(this,"cyclesToCalculate",C(60));I(this,"calculatedCycles",w(()=>{var e;return((e=this.sim.value)==null?void 0:e.getStepsRun())||0}));I(this,"currentCycle",C(0));I(this,"formattedInputData",w(()=>{var e;return z((e=this.sim.value)==null?void 0:e.getInputData(this.currentCycle.value))}));I(this,"formattedFeatureData",w(()=>{var e;return z((e=this.sim.value)==null?void 0:e.getFeatureData(this.currentCycle.value))}));I(this,"formattedPhonemeData",w(()=>{var e;return z((e=this.sim.value)==null?void 0:e.getPhonemeData(this.currentCycle.value))}));I(this,"formattedWordData",w(()=>{var e;return z((e=this.sim.value)==null?void 0:e.getWordData(this.currentCycle.value))}));I(this,"formattedLevelsAndFlowData",w(()=>{var e;return z((e=this.sim.value)==null?void 0:e.getAllLevelsAndFlowData().map(([r],i)=>[i,...r.map(t=>t.toFixed(13).padEnd(18," "))]))}));I(this,"analysisData",C([]));I(this,"formattedAnalysisData",w(()=>ft(this.analysisData.value,!0)));I(this,"useBoxChart",C(!1));I(this,"isModelInputValid",C(!0))}updateAnalysis(){this.analysisData.value=Ie(ne(se({},this.analysisConfig),{sim:this.sim.value})).map((e,r)=>ne(se({},e),{fill:!1,borderColor:ct[r],showLine:!0}))}runSimulation(){this.isModelInputValid.value=!0;try{const e=JSON.parse(JSON.stringify(this.config));console.time("trace.js");const r=new at(e);r.cycle(this.cyclesToCalculate.value),console.timeEnd("trace.js"),this.currentCycle.value=Math.min(Math.max(this.currentCycle.value,0),this.calculatedCycles.value),this.sim.value=r,this.lastSimConfig.value=e,this.lastSimConfigHash.value=le(e),this.updateAnalysis()}catch(e){throw e instanceof he&&(this.isModelInputValid.value=!1),e}}}const Oe=Symbol(),gt=()=>{const s=new mt;return ke(Oe,s),s},Rt=()=>Te(Oe);const ut="_nav_19fpx_2",dt="_main_19fpx_6";var St={nav:ut,main:dt};const bt=ue({name:"App",components:{NavigationTabs:Ye},setup(){const s=gt(),e=[{label:w(()=>`Config${s.isConfigChanged.value?" [*]":""}`),component:F(()=>k(()=>import("./ConfigTab.d26f6c13.js"),["assets/ConfigTab.d26f6c13.js","assets/ConfigTab.6976b6a7.css","assets/constants.2145432e.js","assets/vendor.9f3413dc.js","assets/ConfigInput.f187558a.js","assets/BaseChart.b567492b.js"]))},{label:"Simulation",component:F(()=>k(()=>import("./SimulationTab.57554f84.js"),["assets/SimulationTab.57554f84.js","assets/SimulationTab.54c345bc.css","assets/vendor.9f3413dc.js","assets/constants.2145432e.js","assets/ConfigInput.f187558a.js","assets/BaseChart.b567492b.js","assets/SimulationToolbar.b99795e0.js","assets/SimulationToolbar.478aa04a.css"]))},{label:"Chart",component:F(()=>k(()=>import("./ChartTab.b0098788.js"),["assets/ChartTab.b0098788.js","assets/ChartTab.3dc233e5.css","assets/vendor.9f3413dc.js","assets/BaseChart.b567492b.js","assets/SimulationToolbar.b99795e0.js","assets/SimulationToolbar.478aa04a.css","assets/constants.2145432e.js"]))},{label:"Chart Data",component:F(()=>k(()=>import("./ChartDataTab.a49204b6.js"),["assets/ChartDataTab.a49204b6.js","assets/DataTab.a63f49ca.js","assets/DataTab.57306843.css","assets/SimulationToolbar.b99795e0.js","assets/SimulationToolbar.478aa04a.css","assets/constants.2145432e.js","assets/vendor.9f3413dc.js"]))},{label:"Input",component:F(()=>k(()=>import("./InputTab.847465f5.js"),["assets/InputTab.847465f5.js","assets/DataTab.a63f49ca.js","assets/DataTab.57306843.css","assets/SimulationToolbar.b99795e0.js","assets/SimulationToolbar.478aa04a.css","assets/constants.2145432e.js","assets/vendor.9f3413dc.js"]))},{label:"Feature",component:F(()=>k(()=>import("./FeatureTab.757f6a5e.js"),["assets/FeatureTab.757f6a5e.js","assets/DataTab.a63f49ca.js","assets/DataTab.57306843.css","assets/SimulationToolbar.b99795e0.js","assets/SimulationToolbar.478aa04a.css","assets/constants.2145432e.js","assets/vendor.9f3413dc.js"]))},{label:"Phoneme",component:F(()=>k(()=>import("./PhonemeTab.ec7e92c6.js"),["assets/PhonemeTab.ec7e92c6.js","assets/DataTab.a63f49ca.js","assets/DataTab.57306843.css","assets/SimulationToolbar.b99795e0.js","assets/SimulationToolbar.478aa04a.css","assets/constants.2145432e.js","assets/vendor.9f3413dc.js"]))},{label:"Word",component:F(()=>k(()=>import("./WordTab.f565d54f.js"),["assets/WordTab.f565d54f.js","assets/DataTab.a63f49ca.js","assets/DataTab.57306843.css","assets/SimulationToolbar.b99795e0.js","assets/SimulationToolbar.478aa04a.css","assets/constants.2145432e.js","assets/vendor.9f3413dc.js"]))},{label:"Levels and Flow",component:F(()=>k(()=>import("./LevelsAndFlowTab.890c9a18.js"),["assets/LevelsAndFlowTab.890c9a18.js","assets/DataTab.a63f49ca.js","assets/DataTab.57306843.css","assets/SimulationToolbar.b99795e0.js","assets/SimulationToolbar.478aa04a.css","assets/constants.2145432e.js","assets/vendor.9f3413dc.js"]))}],r=C(0);return{labels:w(()=>e.map(i=>typeof i.label=="string"?i.label:i.label.value)),activeIndex:r,activeComponent:w(()=>e[r.value].component)}}}),qt=Xe("loading...");function At(s,e,r,i,t,o){const n=He("NavigationTabs");return H(),G(de,null,[J("nav",{class:K(s.$style.nav)},[We(n,{labels:s.labels,"active-index":s.activeIndex,"onUpdate:active-index":e[0]||(e[0]=f=>s.activeIndex=f),"is-boxed":""},null,8,["labels","active-index"])],2),J("main",{class:K(s.$style.main)},[(H(),Ae(Ve,null,{default:Le(()=>[(H(),Ae(Be(s.activeComponent)))]),fallback:Le(()=>[qt]),_:1}))],2)],64)}const Lt={$style:St};var Pt=_e(bt,[["render",At],["__cssModules",Lt]]);je(Pt).mount("#app");export{Ye as N,st as T,_e as _,wt as a,Ot as b,Nt as c,Dt as d,E as e,x as f,Rt as g,V as h,X as i,q as j,It as p};
